/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 10:42:36 GMT 2024
 */

package br.com.swconsultoria.nfe.schema.eventoSuframaInternaliza;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema.eventoSuframaInternaliza.ModalRodov;
import br.com.swconsultoria.nfe.schema.eventoSuframaInternaliza.TUf;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModalRodov_ESTest extends ModalRodov_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      TUf tUf0 = TUf.TO;
      modalRodov0.ufVeic = tUf0;
      TUf tUf1 = modalRodov0.getUFVeic();
      assertSame(tUf1, tUf0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      TUf tUf0 = TUf.PB;
      modalRodov0.ufCarreta2 = tUf0;
      TUf tUf1 = modalRodov0.getUFCarreta2();
      assertSame(tUf1, tUf0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      TUf tUf0 = TUf.PB;
      modalRodov0.ufCarreta = tUf0;
      TUf tUf1 = modalRodov0.getUFCarreta();
      assertEquals(TUf.PB, tUf1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.placaVeic = "CE";
      String string0 = modalRodov0.getPlacaVeic();
      assertEquals("CE", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.setPlacaCarreta2("evgD5OTrQ*5oq~V,");
      String string0 = modalRodov0.getPlacaCarreta2();
      assertEquals("evgD5OTrQ*5oq~V,", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.setPlacaCarreta("");
      String string0 = modalRodov0.getPlacaCarreta();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      TUf tUf0 = TUf.AC;
      modalRodov0.setUFCarreta(tUf0);
      assertEquals(TUf.AC, modalRodov0.getUFCarreta());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      TUf tUf0 = TUf.PB;
      modalRodov0.setUFCarreta2(tUf0);
      assertNull(modalRodov0.getPlacaVeic());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.getUFCarreta2();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.getUFVeic();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      String string0 = modalRodov0.getPlacaVeic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.setPlacaCarreta2("");
      String string0 = modalRodov0.getPlacaCarreta2();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.getUFCarreta();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      TUf tUf0 = TUf.TO;
      modalRodov0.setUFVeic(tUf0);
      assertNull(modalRodov0.getPlacaCarreta());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.setPlacaCarreta("le3NF^cx'j`~e``a-a");
      String string0 = modalRodov0.getPlacaCarreta();
      assertEquals("le3NF^cx'j`~e``a-a", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      String string0 = modalRodov0.getPlacaCarreta();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      modalRodov0.setPlacaVeic("");
      String string0 = modalRodov0.getPlacaVeic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ModalRodov modalRodov0 = new ModalRodov();
      String string0 = modalRodov0.getPlacaCarreta2();
      assertNull(string0);
  }
}
