/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 10:59:40 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.consSitNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TProcEvento;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TProtNFe;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetCancNFe;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetConsSitNFe;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TRetConsSitNFe_ESTest extends TRetConsSitNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      TProtNFe tProtNFe0 = new TProtNFe();
      tRetConsSitNFe0.setProtNFe(tProtNFe0);
      assertNull(tRetConsSitNFe0.getVersao());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.xMotivo = "br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetEvento";
      String string0 = tRetConsSitNFe0.getXMotivo();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetEvento", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setXMotivo("");
      String string0 = tRetConsSitNFe0.getXMotivo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setVersao("LJ6V`M]");
      String string0 = tRetConsSitNFe0.getVersao();
      assertEquals("LJ6V`M]", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.versao = "";
      String string0 = tRetConsSitNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.verAplic = "br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetConsSitNFe";
      String string0 = tRetConsSitNFe0.getVerAplic();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetConsSitNFe", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setVerAplic("");
      String string0 = tRetConsSitNFe0.getVerAplic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setTpAmb("br.com.swconsultoria.nfe.schema_4.consSitNFe.TransformsType");
      String string0 = tRetConsSitNFe0.getTpAmb();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.TransformsType", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setTpAmb("");
      String string0 = tRetConsSitNFe0.getTpAmb();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      tRetConsSitNFe0.setRetCancNFe(tRetCancNFe0);
      TRetCancNFe tRetCancNFe1 = tRetConsSitNFe0.getRetCancNFe();
      assertSame(tRetCancNFe1, tRetCancNFe0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      TProtNFe tProtNFe0 = new TProtNFe();
      tRetConsSitNFe0.protNFe = tProtNFe0;
      TProtNFe tProtNFe1 = tRetConsSitNFe0.getProtNFe();
      assertNull(tProtNFe1.getVersao());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      List<TProcEvento> list0 = tRetConsSitNFe0.getProcEventoNFe();
      tRetConsSitNFe0.procEventoNFe = list0;
      LinkedList<TProcEvento> linkedList0 = new LinkedList<TProcEvento>();
      tRetConsSitNFe0.procEventoNFe = (List<TProcEvento>) linkedList0;
      TProcEvento tProcEvento0 = new TProcEvento();
      linkedList0.add(tProcEvento0);
      List<TProcEvento> list1 = tRetConsSitNFe0.getProcEventoNFe();
      assertTrue(list1.contains(tProcEvento0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setDhRecbto("");
      String string0 = tRetConsSitNFe0.getDhRecbto();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setChNFe("br.com.swconsultoria.nfe.schema_4.consSitNFe.TransformsType");
      String string0 = tRetConsSitNFe0.getChNFe();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.TransformsType", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.chNFe = "";
      String string0 = tRetConsSitNFe0.getChNFe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.cuf = "/%engyq:vv?@=~";
      String string0 = tRetConsSitNFe0.getCUF();
      assertEquals("/%engyq:vv?@=~", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setCUF("");
      String string0 = tRetConsSitNFe0.getCUF();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setCStat("LJ6V`M]");
      String string0 = tRetConsSitNFe0.getCStat();
      assertEquals("LJ6V`M]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.cStat = "";
      String string0 = tRetConsSitNFe0.getCStat();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      TRetCancNFe tRetCancNFe0 = tRetConsSitNFe0.getRetCancNFe();
      assertNull(tRetCancNFe0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      tRetConsSitNFe0.setDhRecbto("br.com.swconsultoria.nfe.schema_4.consSitNFe.SignedInfoType");
      String string0 = tRetConsSitNFe0.getDhRecbto();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.SignedInfoType", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getCUF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getVerAplic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      TProtNFe tProtNFe0 = tRetConsSitNFe0.getProtNFe();
      assertNull(tProtNFe0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getDhRecbto();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getTpAmb();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getChNFe();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getXMotivo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TRetConsSitNFe tRetConsSitNFe0 = new TRetConsSitNFe();
      String string0 = tRetConsSitNFe0.getCStat();
      assertNull(string0);
  }
}
