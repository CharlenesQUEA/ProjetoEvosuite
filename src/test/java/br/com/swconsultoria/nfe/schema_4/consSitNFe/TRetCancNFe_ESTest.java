/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 07:49:08 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.consSitNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.SignatureType;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TRetCancNFe;
import javax.xml.datatype.XMLGregorianCalendar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TRetCancNFe_ESTest extends TRetCancNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setNProt("'+:Ri!9*5jJg+1");
      String string0 = tRetCancNFe_InfCanc0.getNProt();
      assertEquals("'+:Ri!9*5jJg+1", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.chNFe = "3q9$|u~KEuD9>9nar";
      String string0 = tRetCancNFe_InfCanc0.getChNFe();
      assertEquals("3q9$|u~KEuD9>9nar", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.cuf = "C/f|5.O]@P4#?.w$d4}";
      String string0 = tRetCancNFe_InfCanc0.getCUF();
      assertEquals("C/f|5.O]@P4#?.w$d4}", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setXMotivo("");
      String string0 = tRetCancNFe_InfCanc0.getCUF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setId(" *y Wb");
      String string0 = tRetCancNFe_InfCanc0.getCUF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setChNFe(" *y Wb");
      String string0 = tRetCancNFe_InfCanc0.getCUF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setVerAplic(" *y Wb");
      String string0 = tRetCancNFe_InfCanc0.getCUF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setXMotivo("SX}EOl;]~PG");
      String string0 = tRetCancNFe_InfCanc0.getXMotivo();
      assertEquals("SX}EOl;]~PG", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setCUF("SX}EOl;]~PG");
      String string0 = tRetCancNFe_InfCanc0.getXMotivo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setTpAmb("I{ ZhTP");
      assertNull(tRetCancNFe_InfCanc0.getVerAplic());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.tpAmb = "";
      String string0 = tRetCancNFe_InfCanc0.getTpAmb();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      tRetCancNFe0.setVersao("re:H;/\"$}-Bw=E,H");
      String string0 = tRetCancNFe0.getVersao();
      assertEquals("re:H;/\"$}-Bw=E,H", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      tRetCancNFe0.setVersao("");
      String string0 = tRetCancNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      SignatureType signatureType0 = new SignatureType();
      tRetCancNFe0.setSignature(signatureType0);
      SignatureType signatureType1 = tRetCancNFe0.getSignature();
      assertSame(signatureType1, signatureType0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      String string0 = tRetCancNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = tRetCancNFe0.getInfCanc();
      assertNull(tRetCancNFe_InfCanc0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      SignatureType signatureType0 = tRetCancNFe0.getSignature();
      tRetCancNFe0.setSignature(signatureType0);
      assertNull(tRetCancNFe0.getVersao());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TRetCancNFe tRetCancNFe0 = new TRetCancNFe();
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe0.setInfCanc(tRetCancNFe_InfCanc0);
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc1 = tRetCancNFe0.getInfCanc();
      assertNull(tRetCancNFe_InfCanc1.getNProt());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setDhRecbto((XMLGregorianCalendar) null);
      assertNull(tRetCancNFe_InfCanc0.getNProt());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      XMLGregorianCalendar xMLGregorianCalendar0 = tRetCancNFe_InfCanc0.getDhRecbto();
      assertNull(xMLGregorianCalendar0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setId("");
      String string0 = tRetCancNFe_InfCanc0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setVerAplic("http://ww.w3ho/2000/09/xmldsig#rsa-shA1");
      String string0 = tRetCancNFe_InfCanc0.getVerAplic();
      assertEquals("http://ww.w3ho/2000/09/xmldsig#rsa-shA1", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TRetCancNFe.InfCanc tRetCancNFe_InfCanc0 = new TRetCancNFe.InfCanc();
      tRetCancNFe_InfCanc0.setCStat("http://ww.w3ho/2000/09/xmldsig#rsa-shA1");
      String string0 = tRetCancNFe_InfCanc0.getCStat();
      assertEquals("http://ww.w3ho/2000/09/xmldsig#rsa-shA1", string0);
  }
}
