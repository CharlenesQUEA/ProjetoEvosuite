/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 11:33:49 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.retConsReciNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TNFe;
import br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TNfeProc;
import br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TProtNFe;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TNfeProc_ESTest extends TNfeProc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      tNfeProc0.setVersao("ZaD/CPt#5%~hPb");
      String string0 = tNfeProc0.getVersao();
      assertEquals("ZaD/CPt#5%~hPb", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      tNfeProc0.versao = "";
      String string0 = tNfeProc0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      String string0 = tNfeProc0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      TNFe tNFe0 = tNfeProc0.getNFe();
      assertNull(tNFe0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      TProtNFe tProtNFe0 = new TProtNFe();
      tNfeProc0.setProtNFe(tProtNFe0);
      TProtNFe tProtNFe1 = tNfeProc0.getProtNFe();
      assertNull(tProtNFe1.getVersao());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      TProtNFe tProtNFe0 = tNfeProc0.getProtNFe();
      assertNull(tProtNFe0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TNfeProc tNfeProc0 = new TNfeProc();
      TNFe tNFe0 = new TNFe();
      tNfeProc0.setNFe(tNFe0);
      TNFe tNFe1 = tNfeProc0.getNFe();
      assertSame(tNFe1, tNFe0);
  }
}
