/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 05:31:45 GMT 2024
 */

package br.com.swconsultoria.certificado;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.certificado.AliasKeyManager;
import java.security.KeyStore;
import java.security.Principal;
import java.security.PrivateKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AliasKeyManager_ESTest extends AliasKeyManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager((KeyStore) null, "b.com.wconsultria.certificado.AliaseyManager", "b.com.wconsultria.certificado.AliaseyManager");
      PrivateKey privateKey0 = aliasKeyManager0.getPrivateKey("b.com.wconsultria.certificado.AliaseyManager");
      assertNull(privateKey0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager((KeyStore) null, "S4vv$t_Y;O=<Txpmm>#2", "S4vv$t_Y;O=<Txpmm>#2");
      // Undeclared exception!
      try { 
        aliasKeyManager0.getCertificateChain("S4vv$t_Y;O=<Txpmm>#2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.certificado.AliasKeyManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager((KeyStore) null, "S4vv$t_Y;O=<Txpmm>#2", "S4vv$t_Y;O=<Txpmm>#2");
      Principal[] principalArray0 = new Principal[6];
      String[] stringArray0 = aliasKeyManager0.getServerAliases((String) null, principalArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager((KeyStore) null, "S4vv$t_Y;O=<Txpmm>#2", "S4vv$t_Y;O=<Txpmm>#2");
      Principal[] principalArray0 = new Principal[6];
      MockSocket mockSocket0 = new MockSocket();
      String string0 = aliasKeyManager0.chooseServerAlias("S4vv$t_Y;O=<Txpmm>#2", principalArray0, mockSocket0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager((KeyStore) null, "b.com.wconsultria.certificado.AliaseyManager", "b.com.wconsultria.certificado.AliaseyManager");
      Principal[] principalArray0 = new Principal[10];
      MockSocket mockSocket0 = new MockSocket();
      String[] stringArray0 = aliasKeyManager0.getClientAliases("b.com.wconsultria.certificado.AliaseyManager", principalArray0);
      String string0 = aliasKeyManager0.chooseClientAlias(stringArray0, principalArray0, mockSocket0);
      assertNull(string0);
  }
}
