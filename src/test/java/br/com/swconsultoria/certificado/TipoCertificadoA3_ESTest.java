/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 07:08:28 GMT 2024
 */

package br.com.swconsultoria.certificado;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.certificado.TipoCertificadoA3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TipoCertificadoA3_ESTest extends TipoCertificadoA3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TipoCertificadoA3 tipoCertificadoA3_0 = TipoCertificadoA3.OBERTHUR;
      String string0 = tipoCertificadoA3_0.getConfigA3("", "");
      assertEquals("name = \n\rlibrary = \n\rshowInfo = true", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TipoCertificadoA3[] tipoCertificadoA3Array0 = TipoCertificadoA3.values();
      assertEquals(5, tipoCertificadoA3Array0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TipoCertificadoA3 tipoCertificadoA3_0 = TipoCertificadoA3.valueOf("OBERTHUR");
      assertEquals(TipoCertificadoA3.OBERTHUR, tipoCertificadoA3_0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TipoCertificadoA3 tipoCertificadoA3_0 = TipoCertificadoA3.TOKEN_ALADDIN;
      String string0 = tipoCertificadoA3_0.getConfigA3("", "", (String) null);
      assertEquals("name = \n\rlibrary = \n\rshowInfo = true", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TipoCertificadoA3 tipoCertificadoA3_0 = TipoCertificadoA3.OBERTHUR;
      String string0 = tipoCertificadoA3_0.getConfigA3("OBERTHUR", "z@@VGf8h7P'1", "OBERTHUR");
      assertEquals("name = OBERTHUR\n\rlibrary = z@@VGf8h7P'1\n\rslot = OBERTHUR\n\rshowInfo = true", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TipoCertificadoA3 tipoCertificadoA3_0 = TipoCertificadoA3.OBERTHUR;
      String string0 = tipoCertificadoA3_0.getConfigA3("name = name = \n\rlibrary = \n\rshowInfo = true\n\rlibrary = name = \n\rlibrary = \n\rshowInfo = true\n\rshowInfo = true");
      assertEquals("name = \n\rlibrary = \n\rslot = name = name = \n\rlibrary = \n\rshowInfo = true\n\rlibrary = name = \n\rlibrary = \n\rshowInfo = true\n\rshowInfo = true\n\rshowInfo = true", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TipoCertificadoA3 tipoCertificadoA3_0 = TipoCertificadoA3.OBERTHUR;
      String string0 = tipoCertificadoA3_0.getConfigA3();
      assertEquals("name = \n\rlibrary = \n\rshowInfo = true", string0);
  }
}
