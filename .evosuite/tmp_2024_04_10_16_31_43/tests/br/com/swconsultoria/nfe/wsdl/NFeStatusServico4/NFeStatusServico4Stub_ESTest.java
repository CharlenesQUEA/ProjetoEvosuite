/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 10 23:46:39 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.NFeStatusServico4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4CallbackHandler;
import br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub;
import javax.xml.namespace.NamespaceContext;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMMetaFactoryLocator;
import org.apache.axiom.om.OMSourcedElement;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.context.ServiceContext;
import org.apache.axis2.context.ServiceGroupContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.description.AxisOperation;
import org.apache.axis2.description.AxisService;
import org.apache.axis2.description.AxisServiceGroup;
import org.apache.axis2.engine.AxisConfiguration;
import org.apache.axis2.engine.ListenerManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NFeStatusServico4Stub_ESTest extends NFeStatusServico4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = mock(AxisConfiguration.class, new ViolatedAssumptionAnswer());
      AxisOperation[] axisOperationArray0 = new AxisOperation[2];
      AxisOperation axisOperation0 = mock(AxisOperation.class, new ViolatedAssumptionAnswer());
      axisOperationArray0[0] = axisOperation0;
      axisOperationArray0[1] = axisOperation0;
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("doc", "7V.646&{fr3qNg}rC").when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0).when(xMLStreamReader0).getName();
      doReturn(namespaceContext0).when(xMLStreamReader0).getNamespaceContext();
      doReturn(true).when(xMLStreamReader0).isStartElement();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement(oMElement0);
      nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      XMLStreamWriter xMLStreamWriter1 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, xMLStreamWriter1);
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean0);
      QName qName1 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub((ConfigurationContext) null);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = null;
      try {
        nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamWriter0).getPrefix(anyString());
      boolean boolean0 = false;
      try { 
        nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0, false);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(namespaceContext0).getNamespaceURI(anyString());
      System.setCurrentTimeMillis(0L);
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn("5t4s$h*", (String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0, true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn((String) null, (String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0, true);
      OMElement oMElement0 = null;
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
        fail("Expecting exception: ADBException");
      
      } catch(Throwable e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn("1\"J)2\bRac$mLp~ql", (String) null, (String) null, (String) null, (String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn((String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, true);
      OMElement oMElement0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("nfeResultMsg", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0, qName0).when(xMLStreamReader0).getName();
      doReturn(false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn((-1), (-1), 2231).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader1);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg1 = nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
      XMLStreamWriter xMLStreamWriter0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg1.MY_QNAME, xMLStreamWriter0);
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, xMLStreamWriter0);
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler0 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler1 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler1);
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement {http://www.portalfiscal.inf.br/nfe/wsdl/NFeStatusServico4}nfeDadosMsg
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = null;
      XMLStreamReader xMLStreamReader0 = null;
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("dne").when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0);
      NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName1 = null;
      try {  
      qName1 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      } catch(ADBException e) {}
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn("whttp:queryParameterSeparator").when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("whttp:queryParameterSeparator", "whttp:queryParameterSeparator").when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0).when(xMLStreamReader0).getName();
      doReturn(namespaceContext0).when(xMLStreamReader0).getNamespaceContext();
      doReturn(true).when(xMLStreamReader0).isStartElement();
      NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader1);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, configurationContext0.COPY_PROPERTIES);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      XMLStreamReader xMLStreamReader2 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader2);
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg1);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unsupported type whttp:queryParameterSeparator queryParameterSeparator
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement((OMElement) null);
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement((OMElement) null);
      nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      AxisService axisService0 = mock(AxisService.class, new ViolatedAssumptionAnswer());
      doReturn((AxisServiceGroup) null, (AxisServiceGroup) null, (AxisServiceGroup) null, (AxisServiceGroup) null).when(axisService0).getAxisServiceGroup();
      AxisConfiguration axisConfiguration0 = mock(AxisConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn(axisService0, (AxisService) null).when(axisConfiguration0).getService(anyString());
      ListenerManager listenerManager0 = mock(ListenerManager.class, new ViolatedAssumptionAnswer());
      ServiceGroupContext serviceGroupContext0 = mock(ServiceGroupContext.class, new ViolatedAssumptionAnswer());
      doReturn((ServiceContext) null).when(serviceGroupContext0).getServiceContext(any(org.apache.axis2.description.AxisService.class));
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn(serviceGroupContext0).when(configurationContext0).createServiceGroupContext(any(org.apache.axis2.description.AxisServiceGroup.class));
      doReturn(axisConfiguration0).when(configurationContext0).getAxisConfiguration();
      doReturn(listenerManager0).when(configurationContext0).getListenerManager();
      boolean boolean0 = true;
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "CopyProperties", true);
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.cleanup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.client.ServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isStartElement();
      doReturn(0, 0, 0, 0, 0).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn((OMSourcedElement) null).when(oMFactory0).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName0, oMFactory0);
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement((OMElement) null);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn((AxisConfiguration) null).when(configurationContext0).getAxisConfiguration();
      doReturn((ListenerManager) null).when(configurationContext0).getListenerManager();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "CopyProperties", true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub("");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NFeStatusServico4Stub.ExtensionMapper nFeStatusServico4Stub_ExtensionMapper0 = new NFeStatusServico4Stub.ExtensionMapper();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamWriter0).getPrefix(anyString());
      try { 
        nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn((AxisConfiguration) null).when(configurationContext0).getAxisConfiguration();
      doReturn((ListenerManager) null).when(configurationContext0).getListenerManager();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn((AxisConfiguration) null).when(configurationContext0).getAxisConfiguration();
      doReturn((ListenerManager) null).when(configurationContext0).getListenerManager();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "CopyProperties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn((AxisConfiguration) null).when(configurationContext0).getAxisConfiguration();
      doReturn((ListenerManager) null).when(configurationContext0).getListenerManager();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory0 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isStartElement();
      doReturn(0, 0, 0, 0, 0).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement((OMElement) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NFeStatusServico4Stub.ExtensionMapper.getTypeObject("B# +", "3S", (XMLStreamReader) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory0 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub((String) null);
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFeStatusServico4Stub.ExtensionMapper nFeStatusServico4Stub_ExtensionMapper0 = new NFeStatusServico4Stub.ExtensionMapper();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement((OMElement) null);
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement((OMElement) null);
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement((OMElement) null);
      nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn((AxisConfiguration) null).when(configurationContext0).getAxisConfiguration();
      doReturn((ListenerManager) null).when(configurationContext0).getListenerManager();
      boolean boolean0 = true;
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "CopyProperties", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamWriter0).getPrefix(anyString());
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn((OMSourcedElement) null).when(oMFactory0).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      nFeStatusServico4Stub_NfeDadosMsg0.getOMElement(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, oMFactory0);
      nFeStatusServico4Stub_NfeResultMsg0.localExtraElement = null;
      nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      NFeStatusServico4Stub.NfeResultMsg.Factory nFeStatusServico4Stub_NfeResultMsg_Factory0 = new NFeStatusServico4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub((ConfigurationContext) null, "");
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler0 = null;
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub((ConfigurationContext) null);
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub((ConfigurationContext) null, (String) null, true);
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      OMElement oMElement0 = null;
      try {  
      oMElement0 = nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement;
      } catch(NullPointerException e) {}
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn((NamespaceContext) null).when(xMLStreamWriter0).getNamespaceContext();
      doReturn((String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0, true);
      QName qName1 = null;
      try {  
      qName1 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      } catch(NullPointerException e) {}
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory0 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(0, 0).when(xMLStreamReader0).getEventType();
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn((Object) null, (Object) null).when(xMLStreamReader0).getProperty(anyString());
      doReturn(true).when(xMLStreamReader0).isEndElement();
      doReturn(true, false, true).when(xMLStreamReader0).isStartElement();
      doReturn(0).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName0, oMFactory0);
      nFeStatusServico4Stub_NfeResultMsg0.localExtraElement = oMElement0;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(0, 0).when(xMLStreamReader0).getEventType();
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn((Object) null, (Object) null).when(xMLStreamReader0).getProperty(anyString());
      doReturn(true, true, true).when(xMLStreamReader0).isStartElement();
      doReturn((-299)).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = oMElement0;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = new NFeStatusServico4Stub.NfeDadosMsg();
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = null;
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axiom.om.impl.builder.StAXOMBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NFeStatusServico4Stub.ExtensionMapper nFeStatusServico4Stub_ExtensionMapper0 = new NFeStatusServico4Stub.ExtensionMapper();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("icj[bRs(S,exg'<b>lT").when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = null;
      try {
        nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
        fail("Expecting exception: ADBException");
      
      } catch(Throwable e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(0, 0).when(xMLStreamReader0).getEventType();
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn((Object) null, (Object) null).when(xMLStreamReader0).getProperty(anyString());
      doReturn(false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, true, true).when(xMLStreamReader0).isStartElement();
      doReturn(838, 838, (-884)).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeDadosMsg0.getOMElement(qName0, oMFactory0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn(false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn((-1), (-1), 2231).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader1);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg1 = nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
      XMLStreamWriter xMLStreamWriter0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg1.MY_QNAME, xMLStreamWriter0);
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, xMLStreamWriter0);
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler0 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler1 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler1);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = true;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn(false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn(3, 1, 1).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeDadosMsg0.getOMElement(qName0, oMFactory0);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("CnCt6dqvD;@Y", (String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0, true);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = null;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = null;
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("").when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = null;
      try {
        nFeStatusServico4Stub_NfeDadosMsg1 = new NFeStatusServico4Stub.NfeDadosMsg();
        fail("Expecting exception: ADBException");
      
      } catch(Throwable e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = true;
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("F-?)bcapEtri", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0).when(xMLStreamReader0).getName();
      doReturn((NamespaceContext) null).when(xMLStreamReader0).getNamespaceContext();
      doReturn(false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true).when(xMLStreamReader0).isStartElement();
      doReturn(3).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName1 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeDadosMsg0.getOMElement(qName1, oMFactory0);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(0, 0).when(xMLStreamReader0).getEventType();
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn((Object) null, (Object) null).when(xMLStreamReader0).getProperty(anyString());
      doReturn(true, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, true, true).when(xMLStreamReader0).isStartElement();
      doReturn(99999, 853).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn(true).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn(628).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement(oMElement0);
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean0);
      XMLStreamWriter xMLStreamWriter1 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.getOMElement(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, oMFactory0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("!-?)bcapEuri", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0).when(xMLStreamReader0).getName();
      doReturn((NamespaceContext) null).when(xMLStreamReader0).getNamespaceContext();
      doReturn(false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true).when(xMLStreamReader0).isStartElement();
      doReturn(44).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      QName qName1 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName1, xMLStreamWriter0, boolean0);
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory0 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName1, oMFactory0);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = "axis2";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0, boolean0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = null;
      try {
        nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null).when(xMLStreamReader0).getName();
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, true, false, false).when(xMLStreamReader0).isStartElement();
      doReturn((-1), 0, 4194304, 4194304, (-1)).when(xMLStreamReader0).next();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      OMSourcedElement oMSourcedElement0 = mock(OMSourcedElement.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(oMSourcedElement0).toString();
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn(oMSourcedElement0).when(oMFactory0).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement((OMElement) null);
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName0, oMFactory0);
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement(oMElement0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      XMLStreamWriter xMLStreamWriter1 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter1, boolean0);
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, xMLStreamWriter0);
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory0 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory1 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
      String string0 = "17BKVC\"4<hNbI0&gi";
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(0, 0).when(xMLStreamReader0).getEventType();
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn((Object) null, (Object) null).when(xMLStreamReader0).getProperty(anyString());
      doReturn(true, true).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, true).when(xMLStreamReader0).isStartElement();
      doReturn((-926)).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn(false, true).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, false).when(xMLStreamReader0).isStartElement();
      doReturn(97, (-824)).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0, boolean0);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      XMLStreamWriter xMLStreamWriter1 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter1);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn(false, false, true).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn((-1474849031), (-1474849031), 4).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader1);
      String string0 = "4Vb+2HU=6,,05X=Uo4";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn((QName) null, (QName) null).when(xMLStreamReader0).getName();
      doReturn(true).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn(6).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName0, oMFactory0);
      QName qName1 = null;
      OMFactory oMFactory1 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName1, oMFactory1);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("jI[;>/&o&", "jI[;>/&o&", (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0, true);
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      try { 
        NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn("nfeDadosMsg", (String) null, (String) null, (String) null, (String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn((String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0, true);
      OMElement oMElement0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn((OMSourcedElement) null).when(oMFactory0).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      nFeStatusServico4Stub_NfeDadosMsg0.getOMElement(qName0, oMFactory0);
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = null;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("Z<1%e{eqTx&7`n:&Sw1", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME).when(xMLStreamReader0).getName();
      doReturn((NamespaceContext) null).when(xMLStreamReader0).getNamespaceContext();
      doReturn(true).when(xMLStreamReader0).isStartElement();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = oMElement0;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = new NFeStatusServico4Stub.NfeDadosMsg();
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = null;
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      OMSourcedElement oMSourcedElement0 = mock(OMSourcedElement.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(oMSourcedElement0).toString();
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn(oMSourcedElement0).when(oMFactory0).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName0, oMFactory0);
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement(oMElement0);
      QName qName1 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("serviceBuilderExtension").when(xMLStreamWriter0).getPrefix(anyString());
      boolean boolean0 = false;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName1, xMLStreamWriter0, false);
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub();
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = mock(AxisConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn((AxisService) null).when(axisConfiguration0).getService(anyString());
      ListenerManager listenerManager0 = mock(ListenerManager.class, new ViolatedAssumptionAnswer());
      ServiceGroupContext serviceGroupContext0 = mock(ServiceGroupContext.class, new ViolatedAssumptionAnswer());
      doReturn((ServiceContext) null).when(serviceGroupContext0).getServiceContext(any(org.apache.axis2.description.AxisService.class));
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      doReturn(serviceGroupContext0).when(configurationContext0).createServiceGroupContext(any(org.apache.axis2.description.AxisServiceGroup.class));
      doReturn(axisConfiguration0).when(configurationContext0).getAxisConfiguration();
      doReturn(listenerManager0).when(configurationContext0).getListenerManager();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "CopyProperties", true);
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, false, false, false, false).when(xMLStreamReader0).isStartElement();
      doReturn(0, 0, 0, 0, 0).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      boolean boolean0 = true;
      boolean boolean1 = true;
      int int0 = (-299);
      int int1 = (-3366);
      int int2 = (-2480);
      String string0 = "org.apache.axiom.om.impl.dom.NSUnawareAttribute";
      QName qName0 = null;
      Object object0 = null;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.axiom.om.impl.dom.NSUnawareAttribute", "org.apache.axiom.om.impl.dom.NSUnawareAttribute").when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME).when(xMLStreamReader0).getName();
      doReturn(namespaceContext0).when(xMLStreamReader0).getNamespaceContext();
      doReturn(true).when(xMLStreamReader0).isStartElement();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn(string0).when(xMLStreamReader1).getAttributeValue(anyString() , anyString());
      doReturn(int1, int2).when(xMLStreamReader1).getEventType();
      doReturn(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, qName0).when(xMLStreamReader1).getName();
      doReturn(object0, nFeStatusServico4Stub_NfeDadosMsg1).when(xMLStreamReader1).getProperty(anyString());
      doReturn(boolean0, boolean1, boolean0).when(xMLStreamReader1).isStartElement();
      doReturn(int0).when(xMLStreamReader1).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader1);
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = oMElement0;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = true;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean2);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg2 = new NFeStatusServico4Stub.NfeDadosMsg();
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      int int0 = (-847);
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("Gv/", "bIM_}ZS=`iOR=").when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0).when(xMLStreamReader0).getName();
      doReturn(namespaceContext0).when(xMLStreamReader0).getNamespaceContext();
      doReturn(true).when(xMLStreamReader0).isStartElement();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = oMElement0;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = new NFeStatusServico4Stub.NfeDadosMsg();
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = null;
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
      Random.setNextRandom(int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      OMSourcedElement oMSourcedElement0 = mock(OMSourcedElement.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(oMSourcedElement0).toString();
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn(oMSourcedElement0).when(oMFactory0).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getOMElement(qName0, oMFactory0);
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement(oMElement0);
      QName qName1 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn("hB5~#06").when(xMLStreamWriter0).getPrefix(anyString());
      XMLStreamWriter xMLStreamWriter1 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLStreamWriter1).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter1);
      boolean boolean0 = false;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName1, xMLStreamWriter0, false);
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub();
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("nfeResultMsg", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0, qName0).when(xMLStreamReader0).getName();
      doReturn(false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn((-1), (-1), 2231).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader1);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg1 = nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
      XMLStreamWriter xMLStreamWriter0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg1.MY_QNAME, xMLStreamWriter0);
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, xMLStreamWriter0);
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler0 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler1 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler1);
      nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler0);
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement {http://www.portalfiscal.inf.br/nfe/wsdl/NFeStatusServico4}nfeDadosMsg
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("nfeResultMsg", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(qName0, qName0).when(xMLStreamReader0).getName();
      doReturn(false, false).when(xMLStreamReader0).isEndElement();
      doReturn(false, true, false, true, false).when(xMLStreamReader0).isStartElement();
      doReturn((-1), (-1), 2279).when(xMLStreamReader0).next();
      Random.setNextRandom(18);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, string0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader1);
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg1 = nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
      XMLStreamWriter xMLStreamWriter0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg1.MY_QNAME, xMLStreamWriter0);
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, xMLStreamWriter0);
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler0 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      NFeStatusServico4CallbackHandler nFeStatusServico4CallbackHandler1 = mock(NFeStatusServico4CallbackHandler.class, new ViolatedAssumptionAnswer());
      nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler1);
      nFeStatusServico4Stub0.startnfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0, nFeStatusServico4CallbackHandler0);
      nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement {http://www.portalfiscal.inf.br/nfe/wsdl/NFeStatusServico4}nfeDadosMsg
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn(") detected", (String) null, (String) null, (String) null, (String) null).when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn("5t4s$h*", (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0, true);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = true;
      int int0 = (-299);
      int int1 = (-2480);
      String string0 = "org.apache.axiom.om.impl.dom.NSUnawareAttribute";
      QName qName0 = null;
      Object object0 = null;
      QName qName1 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      XMLStreamReader xMLStreamReader0 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.axiom.om.impl.dom.NSUnawareAttribute", (String) null).when(xMLStreamReader0).getAttributeValue(anyString() , anyString());
      doReturn(0, 0).when(xMLStreamReader0).getEventType();
      doReturn(qName1, (QName) null).when(xMLStreamReader0).getName();
      doReturn((Object) null, (Object) null).when(xMLStreamReader0).getProperty(anyString());
      doReturn(true, false, false).when(xMLStreamReader0).isStartElement();
      doReturn(0).when(xMLStreamReader0).next();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg1 = NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
      XMLStreamReader xMLStreamReader1 = mock(XMLStreamReader.class, new ViolatedAssumptionAnswer());
      doReturn(string0).when(xMLStreamReader1).getAttributeValue(anyString() , anyString());
      doReturn(int0, int1).when(xMLStreamReader1).getEventType();
      doReturn(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, qName0).when(xMLStreamReader1).getName();
      doReturn(object0, nFeStatusServico4Stub_NfeDadosMsg1).when(xMLStreamReader1).getProperty(anyString());
      doReturn(boolean0, boolean1, boolean2).when(xMLStreamReader1).isStartElement();
      doReturn(int0).when(xMLStreamReader1).next();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader1);
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = oMElement0;
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      boolean boolean3 = true;
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, xMLStreamWriter0, boolean3);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg2 = new NFeStatusServico4Stub.NfeDadosMsg();
      ConfigurationContext configurationContext0 = mock(ConfigurationContext.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn("http://www.portalfiscal.inf.br/nfe/wsOl/NFeStatusServico4/nfeStatusServicoNF", "NS_UNAWARE_ATTRIBUTE", "").when(namespaceContext0).getNamespaceURI(anyString());
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn((String) null, (String) null, (String) null).when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, xMLStreamWriter0, true);
      OMElement oMElement0 = null;
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
      String string0 = "";
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(string0);
      nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
      QName qName1 = null;
      try {  
      qName1 = NFeStatusServico4Stub.NfeResultMsg.MY_QNAME;
      } catch(ADBException e) {}
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      QName qName0 = NFeStatusServico4Stub.NfeDadosMsg.MY_QNAME;
      NamespaceContext namespaceContext0 = mock(NamespaceContext.class, new ViolatedAssumptionAnswer());
      doReturn("").when(namespaceContext0).getNamespaceURI(anyString());
      System.setCurrentTimeMillis((-1581L));
      XMLStreamWriter xMLStreamWriter0 = mock(XMLStreamWriter.class, new ViolatedAssumptionAnswer());
      doReturn(namespaceContext0).when(xMLStreamWriter0).getNamespaceContext();
      doReturn("5lt4s$h9", (String) null, "?v|&bpZ0>@i8^&Hw^7^").when(xMLStreamWriter0).getPrefix(anyString());
      nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, xMLStreamWriter0, true);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement;
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement((OMElement) null);
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = null;
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMSourcedElement oMSourcedElement0 = mock(OMSourcedElement.class, new ViolatedAssumptionAnswer());
      OMFactory oMFactory0 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      OMSourcedElement oMSourcedElement1 = mock(OMSourcedElement.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(oMSourcedElement1).toString();
      OMFactory oMFactory1 = mock(OMFactory.class, new ViolatedAssumptionAnswer());
      doReturn(oMSourcedElement1).when(oMFactory1).createOMElement(any(org.apache.axiom.om.OMDataSource.class));
      OMElement oMElement1 = nFeStatusServico4Stub_NfeResultMsg0.getOMElement(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, oMFactory1);
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(oMElement1);
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement);
      AxisConfiguration axisConfiguration0 = mock(AxisConfiguration.class, new ViolatedAssumptionAnswer());
  }
}
