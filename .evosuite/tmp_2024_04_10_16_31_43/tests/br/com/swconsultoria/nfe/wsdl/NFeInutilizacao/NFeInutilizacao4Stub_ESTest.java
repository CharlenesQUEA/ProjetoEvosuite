/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 10 22:24:35 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.NFeInutilizacao;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.sw.AsciiXmlWriter;
import com.ctc.wstx.sw.ISOLatin1XmlWriter;
import com.ctc.wstx.sw.RepairingNsStreamWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import com.ctc.wstx.sw.XmlWriter;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMMetaFactory;
import org.apache.axiom.om.OMMetaFactoryLocator;
import org.apache.axiom.om.OMXMLStreamReaderConfiguration;
import org.apache.axiom.om.impl.dom.NSAwareAttribute;
import org.apache.axiom.om.impl.dom.NSAwareElement;
import org.apache.axiom.om.impl.llom.OMSourcedElementImpl;
import org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactory;
import org.apache.axiom.soap.impl.dom.SOAPMessageImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11HeaderImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12HeaderBlockImpl;
import org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultValueImpl;
import org.apache.axis2.AxisFault;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.engine.AxisConfiguration;
import org.apache.axis2.jaxws.message.databinding.impl.DataSourceBlockImpl;
import org.apache.axis2.jaxws.message.factory.BlockFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NFeInutilizacao4Stub_ESTest extends NFeInutilizacao4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      QName qName0 = new QName("1.0");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("F ;KWZT\")]LY57<");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, false);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
      try { 
        nFeInutilizacao4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) repairingNsStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      SOAP12FaultValueImpl sOAP12FaultValueImpl0 = new SOAP12FaultValueImpl();
      nFeInutilizacao4Stub_NfeResultMsg0.setExtraElement(sOAP12FaultValueImpl0);
      assertEquals(0, sOAP12FaultValueImpl0.flags);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SOAPMessageImpl sOAPMessageImpl0 = new SOAPMessageImpl();
      OMXMLStreamReaderConfiguration oMXMLStreamReaderConfiguration0 = new OMXMLStreamReaderConfiguration();
      XMLStreamReader xMLStreamReader0 = sOAPMessageImpl0.getXMLStreamReader(false, oMXMLStreamReaderConfiguration0);
      try { 
        NFeInutilizacao4Stub.ExtensionMapper.getTypeObject("VOi:~h0am;Y6_", "", xMLStreamReader0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // Unsupported type VOi:~h0am;Y6_ 
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub$ExtensionMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = QName.valueOf("Cf*-tg`?#");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("F ;KWZT\")]LY57<");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, false);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      try { 
        nFeInutilizacao4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) repairingNsStreamWriter0, false);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0, "CopyProperties", false);
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.nfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub((ConfigurationContext) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0, "(bO$");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SOAP12HeaderBlockImpl sOAP12HeaderBlockImpl0 = new SOAP12HeaderBlockImpl();
      sOAP12HeaderBlockImpl0.internalSetLocalName("");
      sOAP12HeaderBlockImpl0.flags = 32767;
      OMXMLStreamReaderConfiguration oMXMLStreamReaderConfiguration0 = new OMXMLStreamReaderConfiguration();
      XMLStreamReader xMLStreamReader0 = sOAP12HeaderBlockImpl0.defaultGetXMLStreamReader(false, oMXMLStreamReaderConfiguration0);
      try { 
        NFeInutilizacao4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement 
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      QName qName0 = new QName("1.0");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("F ;KWZT\")]LY57<");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, false);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
      try { 
        nFeInutilizacao4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) repairingNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      NSAwareElement nSAwareElement0 = new NSAwareElement();
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("CopyProperties");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      nFeInutilizacao4Stub_NfeResultMsg0.localExtraElement = (OMElement) nSAwareElement0;
      ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(mockFileOutputStream0, writerConfig0, false);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(iSOLatin1XmlWriter0, "H", writerConfig0);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub_NfeResultMsg0.serialize(nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axiom.om.impl.common.AxiomNamedInformationItemSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SOAP12HeaderBlockImpl sOAP12HeaderBlockImpl0 = new SOAP12HeaderBlockImpl();
      sOAP12HeaderBlockImpl0.internalSetLocalName("");
      sOAP12HeaderBlockImpl0.flags = 32767;
      OMXMLStreamReaderConfiguration oMXMLStreamReaderConfiguration0 = new OMXMLStreamReaderConfiguration();
      XMLStreamReader xMLStreamReader0 = sOAP12HeaderBlockImpl0.defaultGetXMLStreamReader(false, oMXMLStreamReaderConfiguration0);
      try { 
        NFeInutilizacao4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement 
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.NFeInutilizacao4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      SOAP11HeaderImpl sOAP11HeaderImpl0 = new SOAP11HeaderImpl();
      QName qName0 = sOAP11HeaderImpl0.resolveQName("");
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, "7KRL*WY_", writerConfig0);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.sw.BaseNsStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub((ConfigurationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub("$Ld~?F{7-qwfkdod");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0, "CopyProperties", false);
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      try { 
        nFeInutilizacao4Stub0.nfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the CopyProperties URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub((ConfigurationContext) null, "br3@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeInutilizacao4Stub_NfeResultMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      OMFactory oMFactory0 = oMLinkedListMetaFactory0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeInutilizacao4Stub_NfeResultMsg0.getOMElement((QName) null, oMFactory0);
      assertFalse(oMSourcedElementImpl0.definedNamespaceSet);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg.Factory nFeInutilizacao4Stub_NfeResultMsg_Factory0 = new NFeInutilizacao4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFeInutilizacao4Stub.ExtensionMapper nFeInutilizacao4Stub_ExtensionMapper0 = new NFeInutilizacao4Stub.ExtensionMapper();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg.Factory nFeInutilizacao4Stub_NfeDadosMsg_Factory0 = new NFeInutilizacao4Stub.NfeDadosMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeInutilizacao4Stub_NfeDadosMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      NSAwareAttribute nSAwareAttribute0 = new NSAwareAttribute();
      OMFactory oMFactory0 = nSAwareAttribute0.getOMFactory();
      OMElement oMElement0 = nFeInutilizacao4Stub_NfeDadosMsg0.getOMElement((QName) null, oMFactory0);
      nFeInutilizacao4Stub_NfeDadosMsg0.setExtraElement(oMElement0);
      DataSourceBlockImpl dataSourceBlockImpl0 = new DataSourceBlockImpl(oMElement0, nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (BlockFactory) null);
      // Undeclared exception!
      dataSourceBlockImpl0.getReader();
  }
}
