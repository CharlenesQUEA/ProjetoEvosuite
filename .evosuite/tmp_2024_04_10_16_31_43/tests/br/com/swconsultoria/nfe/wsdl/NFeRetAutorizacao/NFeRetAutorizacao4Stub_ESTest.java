/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 10 22:33:44 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4CallbackHandler;
import br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.sw.AsciiXmlWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStreamReader;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.nio.charset.Charset;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import org.apache.axiom.core.NodeFactory;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMMetaFactory;
import org.apache.axiom.om.OMMetaFactoryLocator;
import org.apache.axiom.om.OMNamespace;
import org.apache.axiom.om.OMXMLParserWrapper;
import org.apache.axiom.om.ds.WrappedTextNodeOMDataSourceFromReader;
import org.apache.axiom.om.impl.common.factory.OMFactoryImpl;
import org.apache.axiom.om.impl.dom.DocumentFragmentImpl;
import org.apache.axiom.om.impl.dom.OMSourcedElementImpl;
import org.apache.axiom.om.impl.dom.factory.OMDOMMetaFactory;
import org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactory;
import org.apache.axiom.soap.SOAPBody;
import org.apache.axiom.soap.SOAPEnvelope;
import org.apache.axiom.soap.SOAPFault;
import org.apache.axiom.soap.SOAPFaultCode;
import org.apache.axiom.soap.SOAPFaultSubCode;
import org.apache.axiom.soap.SOAPHeader;
import org.apache.axiom.soap.impl.common.SOAP12Factory;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12BodyImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultCodeImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultNodeImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultRoleImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultValueImpl;
import org.apache.axis2.AxisFault;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.engine.AxisConfiguration;
import org.apache.axis2.jaxws.description.EndpointDescriptionWSDL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NFeRetAutorizacao4Stub_ESTest extends NFeRetAutorizacao4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      QName qName0 = EndpointDescriptionWSDL.SOAP_11_ADDRESS_ELEMENT;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayOutputStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "+/G3t=?t0v\"7U5.L", writerConfig0);
      try { 
        nFeRetAutorizacao4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      OMMetaFactory oMMetaFactory0 = documentFragmentImpl0.getMetaFactory();
      SOAP12BodyImpl sOAP12BodyImpl0 = new SOAP12BodyImpl();
      NodeFactory nodeFactory0 = sOAP12BodyImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMMetaFactory0, nodeFactory0);
      SOAPFault sOAPFault0 = sOAP12Factory0.createSOAPFault((SOAPBody) sOAP12BodyImpl0, (Exception) null);
      nFeRetAutorizacao4Stub_NfeDadosMsg0.setExtraElement(sOAPFault0);
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayOutputStream0, writerConfig0, false);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "+/G3t=?t0v\"7U5.L", writerConfig0);
      nFeRetAutorizacao4Stub_NfeDadosMsg0.serialize(nFeRetAutorizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, true);
      assertEquals("<ns1:nfeDadosMsg xmlns:ns1=\"http://www.portalfiscal.inf.br/nfe/wsdl/NFeRetAutorizacao4\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"ns1:nfeDadosMsg\"><Fault><Detail><Exception>&lt;evosuite>.&lt;evosuite>(&lt;evosuite>)\n&lt;evosuite>.&lt;evosuite>(&lt;evosuite>)\n&lt;evosuite>.&lt;evosuite>(&lt;evosuite>)\n</Exception></Detail></Fault>", byteArrayOutputStream0.toString());
      assertEquals(353, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0);
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      NFeRetAutorizacao4CallbackHandler nFeRetAutorizacao4CallbackHandler0 = mock(NFeRetAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeRetAutorizacao4Stub0.startnfeRetAutorizacaoLote(nFeRetAutorizacao4Stub_NfeDadosMsg0, nFeRetAutorizacao4CallbackHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      configurationContext0.setParent(configurationContext0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0);
      NFeRetAutorizacao4CallbackHandler nFeRetAutorizacao4CallbackHandler0 = mock(NFeRetAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeRetAutorizacao4Stub0.startnfeRetAutorizacaoLote(nFeRetAutorizacao4Stub_NfeDadosMsg0, nFeRetAutorizacao4CallbackHandler0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub((ConfigurationContext) null, "!k@H8", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub((ConfigurationContext) null, "CopyProperties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      configurationContext0.terminate();
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub((ConfigurationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub("getPolicyAttachmentPoint:: axisDescription=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0, "CopyProperties", false);
      // Undeclared exception!
      try { 
        nFeRetAutorizacao4Stub0.nfeRetAutorizacaoLote((NFeRetAutorizacao4Stub.NfeDadosMsg) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0, "formatType");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      SOAP12FaultImpl sOAP12FaultImpl0 = new SOAP12FaultImpl();
      NodeFactory nodeFactory0 = sOAP12FaultImpl0.coreGetNodeFactory();
      OMFactoryImpl oMFactoryImpl0 = new OMFactoryImpl(oMLinkedListMetaFactory0, nodeFactory0);
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeRetAutorizacao4Stub_NfeDadosMsg0.getOMElement((QName) null, oMFactoryImpl0);
      assertEquals(0, oMSourcedElementImpl0.flags);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2131);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charset0);
      WrappedTextNodeOMDataSourceFromReader wrappedTextNodeOMDataSourceFromReader0 = new WrappedTextNodeOMDataSourceFromReader(qName0, inputStreamReader0);
      XMLStreamReader xMLStreamReader0 = wrappedTextNodeOMDataSourceFromReader0.getReader();
      try { 
        NFeRetAutorizacao4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeResultMsg nFeRetAutorizacao4Stub_NfeResultMsg0 = new NFeRetAutorizacao4Stub.NfeResultMsg();
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      MockPrintStream mockPrintStream0 = new MockPrintStream("dne");
      OMDOMMetaFactory oMDOMMetaFactory0 = OMDOMMetaFactory.INSTANCE;
      SOAP12FaultCodeImpl sOAP12FaultCodeImpl0 = new SOAP12FaultCodeImpl();
      NodeFactory nodeFactory0 = sOAP12FaultCodeImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMDOMMetaFactory0, nodeFactory0);
      SOAPFaultSubCode sOAPFaultSubCode0 = sOAP12Factory0.createSOAPFaultSubCode((SOAPFaultCode) sOAP12FaultCodeImpl0, (OMXMLParserWrapper) null);
      nFeRetAutorizacao4Stub_NfeResultMsg0.localExtraElement = (OMElement) sOAPFaultSubCode0;
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "dne", writerConfig0);
      nFeRetAutorizacao4Stub_NfeResultMsg0.serialize(nFeRetAutorizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, true);
      assertNull(simpleNsStreamWriter0.getBaseUri());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeResultMsg nFeRetAutorizacao4Stub_NfeResultMsg0 = new NFeRetAutorizacao4Stub.NfeResultMsg();
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      MockPrintStream mockPrintStream0 = new MockPrintStream("dne");
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "dne", writerConfig0);
      try { 
        nFeRetAutorizacao4Stub_NfeResultMsg0.serialize(nFeRetAutorizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("");
      org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultImpl sOAP12FaultImpl0 = new org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultImpl();
      Reader reader0 = sOAP12FaultImpl0.getTextAsStream(true);
      WrappedTextNodeOMDataSourceFromReader wrappedTextNodeOMDataSourceFromReader0 = new WrappedTextNodeOMDataSourceFromReader(qName0, reader0);
      XMLStreamReader xMLStreamReader0 = wrappedTextNodeOMDataSourceFromReader0.getReader();
      try { 
        NFeRetAutorizacao4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      QName qName0 = EndpointDescriptionWSDL.SOAP_11_ADDRESS_ELEMENT;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayOutputStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "+/G3t=?t0v\"7U5.L", writerConfig0);
      try { 
        nFeRetAutorizacao4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      SOAP12FaultValueImpl sOAP12FaultValueImpl0 = new SOAP12FaultValueImpl();
      OMMetaFactory oMMetaFactory0 = sOAP12FaultValueImpl0.getMetaFactory();
      NodeFactory nodeFactory0 = sOAP12FaultValueImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMMetaFactory0, nodeFactory0);
      SOAPEnvelope sOAPEnvelope0 = sOAP12Factory0.createSOAPEnvelope((OMNamespace) null);
      SOAPHeader sOAPHeader0 = sOAP12Factory0.createSOAPHeader(sOAPEnvelope0);
      nFeRetAutorizacao4Stub_NfeDadosMsg0.localExtraElement = (OMElement) sOAPHeader0;
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayOutputStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "+/G3t=?t0v\"7U5.L", writerConfig0);
      nFeRetAutorizacao4Stub_NfeDadosMsg0.serialize(nFeRetAutorizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0);
      assertEquals("<ns1:nfeDadosMsg xmlns:ns1=\"http://www.portalfiscal.inf.br/nfe/wsdl/NFeRetAutorizacao4\"><Header/>", byteArrayOutputStream0.toString());
      assertEquals(97, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0);
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      try { 
        nFeRetAutorizacao4Stub0.nfeRetAutorizacaoLote(nFeRetAutorizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the https://nfe.fazenda.sp.gov.br/ws/nferetautorizacao4.asmx URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg.Factory nFeRetAutorizacao4Stub_NfeDadosMsg_Factory0 = new NFeRetAutorizacao4Stub.NfeDadosMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeRetAutorizacao4Stub_NfeDadosMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeResultMsg.Factory nFeRetAutorizacao4Stub_NfeResultMsg_Factory0 = new NFeRetAutorizacao4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub("CopyProperties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = null;
      try {
        nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SOAP12FaultRoleImpl sOAP12FaultRoleImpl0 = new SOAP12FaultRoleImpl();
      XMLStreamReader xMLStreamReader0 = sOAP12FaultRoleImpl0.getXMLStreamReader(false);
      try { 
        NFeRetAutorizacao4Stub.ExtensionMapper.getTypeObject((String) null, "5w.Jy-S[!jS(i@-v m", xMLStreamReader0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // Unsupported type null 5w.Jy-S[!jS(i@-v m
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$ExtensionMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NFeRetAutorizacao4Stub.ExtensionMapper nFeRetAutorizacao4Stub_ExtensionMapper0 = new NFeRetAutorizacao4Stub.ExtensionMapper();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeDadosMsg nFeRetAutorizacao4Stub_NfeDadosMsg0 = new NFeRetAutorizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeRetAutorizacao4Stub nFeRetAutorizacao4Stub0 = new NFeRetAutorizacao4Stub(configurationContext0);
      NFeRetAutorizacao4CallbackHandler nFeRetAutorizacao4CallbackHandler0 = mock(NFeRetAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      try { 
        nFeRetAutorizacao4Stub0.startnfeRetAutorizacaoLote(nFeRetAutorizacao4Stub_NfeDadosMsg0, nFeRetAutorizacao4CallbackHandler0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the https://nfe.fazenda.sp.gov.br/ws/nferetautorizacao4.asmx URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QName qName0 = EndpointDescriptionWSDL.SOAP_11_ADDRESS_ELEMENT;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayOutputStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "+/G3t=?t0v\"7U5.L", writerConfig0);
      NFeRetAutorizacao4Stub.NfeResultMsg nFeRetAutorizacao4Stub_NfeResultMsg0 = new NFeRetAutorizacao4Stub.NfeResultMsg();
      try { 
        nFeRetAutorizacao4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeRetAutorizacao.NFeRetAutorizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeResultMsg nFeRetAutorizacao4Stub_NfeResultMsg0 = new NFeRetAutorizacao4Stub.NfeResultMsg();
      SOAP12FaultCodeImpl sOAP12FaultCodeImpl0 = new SOAP12FaultCodeImpl();
      nFeRetAutorizacao4Stub_NfeResultMsg0.setExtraElement(sOAP12FaultCodeImpl0);
      assertEquals((short)1, sOAP12FaultCodeImpl0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeResultMsg nFeRetAutorizacao4Stub_NfeResultMsg0 = new NFeRetAutorizacao4Stub.NfeResultMsg();
      SOAP12FaultNodeImpl sOAP12FaultNodeImpl0 = new SOAP12FaultNodeImpl();
      OMFactory oMFactory0 = sOAP12FaultNodeImpl0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeRetAutorizacao4Stub_NfeResultMsg0.getOMElement((QName) null, oMFactory0);
      assertEquals(0, oMSourcedElementImpl0.flags);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NFeRetAutorizacao4Stub.NfeResultMsg nFeRetAutorizacao4Stub_NfeResultMsg0 = new NFeRetAutorizacao4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeRetAutorizacao4Stub_NfeResultMsg0.getExtraElement();
      assertNull(oMElement0);
  }
}
