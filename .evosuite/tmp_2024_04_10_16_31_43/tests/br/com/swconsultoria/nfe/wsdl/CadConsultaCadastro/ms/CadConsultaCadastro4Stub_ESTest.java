/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 10 23:55:38 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.sw.AsciiXmlWriter;
import com.ctc.wstx.sw.ISOLatin1XmlWriter;
import com.ctc.wstx.sw.RepairingNsStreamWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import java.io.CharArrayReader;
import java.io.OutputStream;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMXMLStreamReaderConfiguration;
import org.apache.axiom.om.ds.WrappedTextNodeOMDataSourceFromReader;
import org.apache.axiom.om.impl.dom.OMSourcedElementImpl;
import org.apache.axiom.om.util.XMLStreamWriterRemoveIllegalChars;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultDetailImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11HeaderBlockImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultRoleImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12HeaderBlockImpl;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.engine.AxisConfiguration;
import org.codehaus.stax2.util.StreamWriter2Delegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CadConsultaCadastro4Stub_ESTest extends CadConsultaCadastro4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      QName qName0 = new QName("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeDadosMsg$Factory", "", "");
      // Undeclared exception!
      try { 
        cadConsultaCadastro4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      cadConsultaCadastro4Stub_NfeResultMsg0.setExtraElement(sOAP11FaultDetailImpl0);
      assertEquals(0, sOAP11FaultDetailImpl0.lineNumber);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      XMLStreamWriterRemoveIllegalChars xMLStreamWriterRemoveIllegalChars0 = new XMLStreamWriterRemoveIllegalChars();
      // Undeclared exception!
      try { 
        cadConsultaCadastro4Stub_NfeDadosMsg0.serialize((QName) null, (XMLStreamWriter) xMLStreamWriterRemoveIllegalChars0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = null;
      try {
        cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub((ConfigurationContext) null, "br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$ExtensionMapper", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      configurationContext0.terminate();
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = null;
      try {
        cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub(configurationContext0, "54<}cWFq}_H4j0% ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = null;
      try {
        cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub((ConfigurationContext) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub(configurationContext0, "CopyProperties", false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      SOAP12HeaderBlockImpl sOAP12HeaderBlockImpl0 = new SOAP12HeaderBlockImpl();
      OMFactory oMFactory0 = sOAP12HeaderBlockImpl0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)cadConsultaCadastro4Stub_NfeDadosMsg0.getOMElement(cadConsultaCadastro4Stub_NfeResultMsg0.MY_QNAME, oMFactory0);
      assertFalse(oMSourcedElementImpl0.isExpanded);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub(configurationContext0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SOAP12FaultRoleImpl sOAP12FaultRoleImpl0 = new SOAP12FaultRoleImpl();
      OMXMLStreamReaderConfiguration oMXMLStreamReaderConfiguration0 = new OMXMLStreamReaderConfiguration();
      XMLStreamReader xMLStreamReader0 = sOAP12FaultRoleImpl0.getXMLStreamReader(true, oMXMLStreamReaderConfiguration0);
      try { 
        CadConsultaCadastro4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      QName qName0 = new QName(" ");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(iSOLatin1XmlWriter0, " in CDATA section", writerConfig0);
      StreamWriter2Delegate streamWriter2Delegate0 = new StreamWriter2Delegate(simpleNsStreamWriter0);
      try { 
        cadConsultaCadastro4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) streamWriter2Delegate0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(iSOLatin1XmlWriter0, " in CDATA section", writerConfig0);
      StreamWriter2Delegate streamWriter2Delegate0 = new StreamWriter2Delegate(simpleNsStreamWriter0);
      try { 
        cadConsultaCadastro4Stub_NfeDadosMsg0.serialize(cadConsultaCadastro4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) streamWriter2Delegate0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = ServiceClient.ANON_OUT_ONLY_OP;
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      WrappedTextNodeOMDataSourceFromReader wrappedTextNodeOMDataSourceFromReader0 = new WrappedTextNodeOMDataSourceFromReader(qName0, charArrayReader0);
      XMLStreamReader xMLStreamReader0 = wrappedTextNodeOMDataSourceFromReader0.getReader();
      try { 
        CadConsultaCadastro4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      QName qName0 = new QName("*mRR[R q:JV,@u_");
      MockPrintStream mockPrintStream0 = new MockPrintStream("*mRR[R q:JV,@u_");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, "*mRR[R q:JV,@u_", writerConfig0);
      try { 
        cadConsultaCadastro4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) repairingNsStreamWriter0, false);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      MockPrintStream mockPrintStream0 = new MockPrintStream("*mRR[R q:JV,@u_");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, "*mRR[R q:JV,@u_", writerConfig0);
      try { 
        cadConsultaCadastro4Stub_NfeResultMsg0.serialize(cadConsultaCadastro4Stub_NfeResultMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0, false);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      OMElement oMElement0 = cadConsultaCadastro4Stub_NfeResultMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg cadConsultaCadastro4Stub_NfeResultMsg0 = new CadConsultaCadastro4Stub.NfeResultMsg();
      SOAP11HeaderBlockImpl sOAP11HeaderBlockImpl0 = new SOAP11HeaderBlockImpl();
      OMFactory oMFactory0 = sOAP11HeaderBlockImpl0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)cadConsultaCadastro4Stub_NfeResultMsg0.getOMElement((QName) null, oMFactory0);
      assertEquals(0, oMSourcedElementImpl0.flags);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SOAP11HeaderBlockImpl sOAP11HeaderBlockImpl0 = new SOAP11HeaderBlockImpl();
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      cadConsultaCadastro4Stub_NfeDadosMsg0.setExtraElement(sOAP11HeaderBlockImpl0);
      assertTrue(sOAP11HeaderBlockImpl0.isExpanded);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      OMElement oMElement0 = cadConsultaCadastro4Stub_NfeDadosMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OMSourcedElementImpl oMSourcedElementImpl0 = new OMSourcedElementImpl();
      XMLStreamReader xMLStreamReader0 = oMSourcedElementImpl0.getXMLStreamReader(false);
      try { 
        CadConsultaCadastro4Stub.ExtensionMapper.getTypeObject("Binding name is null for the binding fault in  binding operation ==> ", "CopyProperties", xMLStreamReader0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // Unsupported type Binding name is null for the binding fault in  binding operation ==>  CopyProperties
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.CadConsultaCadastro.ms.CadConsultaCadastro4Stub$ExtensionMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CadConsultaCadastro4Stub.ExtensionMapper cadConsultaCadastro4Stub_ExtensionMapper0 = new CadConsultaCadastro4Stub.ExtensionMapper();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeDadosMsg.Factory cadConsultaCadastro4Stub_NfeDadosMsg_Factory0 = new CadConsultaCadastro4Stub.NfeDadosMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CadConsultaCadastro4Stub.NfeResultMsg.Factory cadConsultaCadastro4Stub_NfeResultMsg_Factory0 = new CadConsultaCadastro4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = null;
      try {
        cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub(configurationContext0, "54<}cWFq}_H4j0% ");
      CadConsultaCadastro4Stub.NfeDadosMsg cadConsultaCadastro4Stub_NfeDadosMsg0 = new CadConsultaCadastro4Stub.NfeDadosMsg();
      // Undeclared exception!
      try { 
        cadConsultaCadastro4Stub0.consultaCadastro(cadConsultaCadastro4Stub_NfeDadosMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = null;
      try {
        cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub("Grc0!)q5w/-5:3yVa");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CadConsultaCadastro4Stub cadConsultaCadastro4Stub0 = null;
      try {
        cadConsultaCadastro4Stub0 = new CadConsultaCadastro4Stub((ConfigurationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }
}
