/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 10 23:10:30 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4CallbackHandler;
import br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.sw.BufferingXmlWriter;
import com.ctc.wstx.sw.RepairingNsStreamWriter;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayReader;
import java.io.LineNumberReader;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import org.apache.axiom.core.NodeFactory;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMMetaFactory;
import org.apache.axiom.om.OMMetaFactoryLocator;
import org.apache.axiom.om.OMXMLParserWrapper;
import org.apache.axiom.om.ds.WrappedTextNodeOMDataSourceFromReader;
import org.apache.axiom.om.impl.dom.DocumentFragmentImpl;
import org.apache.axiom.om.impl.dom.OMSourcedElementImpl;
import org.apache.axiom.om.impl.dom.factory.OMDOMMetaFactory;
import org.apache.axiom.om.impl.llom.OMElementImpl;
import org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactory;
import org.apache.axiom.soap.SOAPEnvelope;
import org.apache.axiom.soap.SOAPHeader;
import org.apache.axiom.soap.impl.common.SOAP12Factory;
import org.apache.axiom.soap.impl.dom.SOAPMessageImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultDetailImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11HeaderImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12EnvelopeImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultDetailImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12HeaderBlockImpl;
import org.apache.axis2.AxisFault;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.engine.AxisConfiguration;
import org.apache.axis2.saaj.DetailEntryImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NFeInutilizacao4Stub_ESTest extends NFeInutilizacao4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      OMMetaFactory oMMetaFactory0 = documentFragmentImpl0.getMetaFactory();
      SOAP11HeaderImpl sOAP11HeaderImpl0 = new SOAP11HeaderImpl();
      NodeFactory nodeFactory0 = sOAP11HeaderImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMMetaFactory0, nodeFactory0);
      SOAP12FaultDetailImpl sOAP12FaultDetailImpl0 = (SOAP12FaultDetailImpl)sOAP12Factory0.createSOAPFaultDetail();
      nFeInutilizacao4Stub_NfeDadosMsg0.setExtraElement(sOAP12FaultDetailImpl0);
      assertEquals((short)1, sOAP12FaultDetailImpl0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SOAPMessageImpl sOAPMessageImpl0 = new SOAPMessageImpl();
      XMLStreamReader xMLStreamReader0 = sOAPMessageImpl0.getXMLStreamReader(false);
      try { 
        NFeInutilizacao4Stub.ExtensionMapper.getTypeObject("", "CVIXw{dor2.", xMLStreamReader0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // Unsupported type  CVIXw{dor2.
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub$ExtensionMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      NodeFactory nodeFactory0 = sOAP11FaultDetailImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMLinkedListMetaFactory0, nodeFactory0);
      SOAP12EnvelopeImpl sOAP12EnvelopeImpl0 = new SOAP12EnvelopeImpl();
      SOAPHeader sOAPHeader0 = sOAP12Factory0.createSOAPHeader((SOAPEnvelope) sOAP12EnvelopeImpl0, (OMXMLParserWrapper) null);
      nFeInutilizacao4Stub_NfeDadosMsg0.localExtraElement = (OMElement) sOAPHeader0;
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ")J[K#.`m|29]s25wjb*", true, byteArrayOutputStream0, 585);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      nFeInutilizacao4Stub_NfeDadosMsg0.serialize(nFeInutilizacao4Stub_NfeResultMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0);
      assertEquals("<ns1:nfeResultMsg xmlns:ns1=\"http://www.portalfiscal.inf.br/nfe/wsdl/NFeInutilizacao4\"><Header/>", byteArrayOutputStream0.toString());
      assertEquals(96, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      NFeInutilizacao4CallbackHandler nFeInutilizacao4CallbackHandler0 = mock(NFeInutilizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.startnfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0, nFeInutilizacao4CallbackHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      configurationContext0.setParent(configurationContext0);
      NFeInutilizacao4CallbackHandler nFeInutilizacao4CallbackHandler0 = mock(NFeInutilizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.startnfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0, nFeInutilizacao4CallbackHandler0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.nfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      nFeInutilizacao4Stub0._setServiceClient((ServiceClient) null);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.nfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub((ConfigurationContext) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub((ConfigurationContext) null, "jD}:H',E%}wv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      configurationContext0.terminate();
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub((ConfigurationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0, (String) null, true);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.nfeInutilizacaoNF((NFeInutilizacao4Stub.NfeDadosMsg) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      SOAP12HeaderBlockImpl sOAP12HeaderBlockImpl0 = new SOAP12HeaderBlockImpl();
      OMFactory oMFactory0 = sOAP12HeaderBlockImpl0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeInutilizacao4Stub_NfeDadosMsg0.getOMElement((QName) null, oMFactory0);
      assertEquals((short)1, oMSourcedElementImpl0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0, "CopyProperties");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = ServiceClient.ANON_OUT_IN_OP;
      char[] charArray0 = new char[7];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0, 30);
      WrappedTextNodeOMDataSourceFromReader wrappedTextNodeOMDataSourceFromReader0 = new WrappedTextNodeOMDataSourceFromReader(qName0, lineNumberReader0);
      XMLStreamReader xMLStreamReader0 = wrappedTextNodeOMDataSourceFromReader0.getReader();
      try { 
        NFeInutilizacao4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      OMElementImpl oMElementImpl0 = new OMElementImpl();
      nFeInutilizacao4Stub_NfeResultMsg0.setExtraElement(oMElementImpl0);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ">RJ 4HeN8", true, byteArrayOutputStream0, (-22));
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub_NfeResultMsg0.serialize(nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axiom.om.impl.common.AxiomNamedInformationItemSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ">RJ 4HeN8", true, byteArrayOutputStream0, (-22));
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      try { 
        nFeInutilizacao4Stub_NfeResultMsg0.serialize(nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = ServiceClient.ANON_OUT_IN_OP;
      char[] charArray0 = new char[7];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0, 30);
      WrappedTextNodeOMDataSourceFromReader wrappedTextNodeOMDataSourceFromReader0 = new WrappedTextNodeOMDataSourceFromReader(qName0, lineNumberReader0);
      XMLStreamReader xMLStreamReader0 = wrappedTextNodeOMDataSourceFromReader0.getReader();
      try { 
        NFeInutilizacao4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      NodeFactory nodeFactory0 = sOAP11FaultDetailImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMLinkedListMetaFactory0, nodeFactory0);
      SOAP12EnvelopeImpl sOAP12EnvelopeImpl0 = new SOAP12EnvelopeImpl();
      SOAPHeader sOAPHeader0 = sOAP12Factory0.createSOAPHeader((SOAPEnvelope) sOAP12EnvelopeImpl0, (OMXMLParserWrapper) null);
      nFeInutilizacao4Stub_NfeDadosMsg0.localExtraElement = (OMElement) sOAPHeader0;
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ")J[K#.`m|29]s25wjb*", true, byteArrayOutputStream0, 585);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      DetailEntryImpl detailEntryImpl0 = new DetailEntryImpl(nFeInutilizacao4Stub_NfeDadosMsg0.localExtraElement);
      QName qName0 = detailEntryImpl0.getElementQName();
      nFeInutilizacao4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) repairingNsStreamWriter0, true);
      assertEquals("<Header xmlns:ns1=\"http://www.portalfiscal.inf.br/nfe/wsdl/NFeInutilizacao4\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"ns1:nfeDadosMsg\"><Header/>", byteArrayOutputStream0.toString());
      assertEquals(167, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      NodeFactory nodeFactory0 = sOAP11FaultDetailImpl0.coreGetNodeFactory();
      SOAP12Factory sOAP12Factory0 = new SOAP12Factory(oMLinkedListMetaFactory0, nodeFactory0);
      SOAP12EnvelopeImpl sOAP12EnvelopeImpl0 = new SOAP12EnvelopeImpl();
      SOAPHeader sOAPHeader0 = sOAP12Factory0.createSOAPHeader((SOAPEnvelope) sOAP12EnvelopeImpl0, (OMXMLParserWrapper) null);
      nFeInutilizacao4Stub_NfeDadosMsg0.localExtraElement = (OMElement) sOAPHeader0;
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ")J[K#.`m|29]s25wjb*", true, byteArrayOutputStream0, 585);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      nFeInutilizacao4Stub_NfeDadosMsg0.serialize(nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0, true);
      assertEquals(176, byteArrayOutputStream0.size());
      assertEquals("<ns1:nfeDadosMsg xmlns:ns1=\"http://www.portalfiscal.inf.br/nfe/wsdl/NFeInutilizacao4\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"ns1:nfeDadosMsg\"><Header/>", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ")J[K#.`m|29]s25wjb*", true, byteArrayOutputStream0, 585);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      try { 
        nFeInutilizacao4Stub_NfeDadosMsg0.serialize(nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFeInutilizacao4Stub.ExtensionMapper nFeInutilizacao4Stub_ExtensionMapper0 = new NFeInutilizacao4Stub.ExtensionMapper();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg.Factory nFeInutilizacao4Stub_NfeDadosMsg_Factory0 = new NFeInutilizacao4Stub.NfeDadosMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      NFeInutilizacao4CallbackHandler nFeInutilizacao4CallbackHandler0 = mock(NFeInutilizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      try { 
        nFeInutilizacao4Stub0.startnfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0, nFeInutilizacao4CallbackHandler0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the http://nfce.sefaz.ce.gov.br:80/nfce4/services/NFeInutilizacao4 URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, ")J[K#.`m|29]s25wjb*", true, byteArrayOutputStream0, 1);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      try { 
        nFeInutilizacao4Stub_NfeResultMsg0.serialize(nFeInutilizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      OMDOMMetaFactory oMDOMMetaFactory0 = OMDOMMetaFactory.INSTANCE;
      OMFactory oMFactory0 = oMDOMMetaFactory0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeInutilizacao4Stub_NfeResultMsg0.getOMElement((QName) null, oMFactory0);
      assertFalse(oMSourcedElementImpl0.isExpanded);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg nFeInutilizacao4Stub_NfeResultMsg0 = new NFeInutilizacao4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeInutilizacao4Stub_NfeResultMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NFeInutilizacao4Stub.NfeResultMsg.Factory nFeInutilizacao4Stub_NfeResultMsg_Factory0 = new NFeInutilizacao4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      try { 
        nFeInutilizacao4Stub0.nfeInutilizacaoNF(nFeInutilizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the http://nfce.sefaz.ce.gov.br:80/nfce4/services/NFeInutilizacao4 URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NFeInutilizacao4Stub.NfeDadosMsg nFeInutilizacao4Stub_NfeDadosMsg0 = new NFeInutilizacao4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeInutilizacao4Stub_NfeDadosMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub("EJ=j[V23'O GjS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = null;
      try {
        nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeInutilizacao4Stub nFeInutilizacao4Stub0 = new NFeInutilizacao4Stub(configurationContext0);
      NFeInutilizacao4CallbackHandler nFeInutilizacao4CallbackHandler0 = mock(NFeInutilizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeInutilizacao4Stub0.startnfeInutilizacaoNF((NFeInutilizacao4Stub.NfeDadosMsg) null, nFeInutilizacao4CallbackHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeInutilizacao.ce.NFeInutilizacao4Stub", e);
      }
  }
}
