/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 02:30:41 GMT 2024
 */

package br.com.swconsultoria.nfe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.Cancelar;
import br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;
import br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;
import br.com.swconsultoria.nfe.schema.envEventoCancSubst.TEnvEvento;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cancelar_ESTest extends Cancelar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = mock(ConfiguracoesNfe.class, new ViolatedAssumptionAnswer());
      doReturn((Charset) null).when(configuracoesNfe0).getEncode();
      // Undeclared exception!
      try { 
        Cancelar.eventoCancelamentoSubstituicao(configuracoesNfe0, (TEnvEvento) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.util.XmlNfeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      br.com.swconsultoria.nfe.schema.envEventoCancNFe.TEnvEvento tEnvEvento0 = mock(br.com.swconsultoria.nfe.schema.envEventoCancNFe.TEnvEvento.class, new ViolatedAssumptionAnswer());
      DocumentoEnum documentoEnum0 = DocumentoEnum.NFE;
      // Undeclared exception!
      try { 
        Cancelar.eventoCancelamento((ConfiguracoesNfe) null, tEnvEvento0, true, documentoEnum0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.Cancelar", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = mock(ConfiguracoesNfe.class, new ViolatedAssumptionAnswer());
      doReturn((Charset) null).when(configuracoesNfe0).getEncode();
      br.com.swconsultoria.nfe.schema.envEventoCancNFe.TEnvEvento tEnvEvento0 = mock(br.com.swconsultoria.nfe.schema.envEventoCancNFe.TEnvEvento.class, new ViolatedAssumptionAnswer());
      DocumentoEnum documentoEnum0 = DocumentoEnum.NFE;
      try { 
        Cancelar.eventoCancelamento(configuracoesNfe0, tEnvEvento0, false, documentoEnum0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Objeto n\u00E3o mapeado no XmlUtil:TEnvEvento$MockitoMock$445407654
         //
         verifyException("br.com.swconsultoria.nfe.util.XmlNfeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = mock(ConfiguracoesNfe.class, new ViolatedAssumptionAnswer());
      doReturn((Charset) null).when(configuracoesNfe0).getEncode();
      TEnvEvento tEnvEvento0 = mock(TEnvEvento.class, new ViolatedAssumptionAnswer());
      try { 
        Cancelar.eventoCancelamentoSubstituicao(configuracoesNfe0, tEnvEvento0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Objeto n\u00E3o mapeado no XmlUtil:TEnvEvento$MockitoMock$717757071
         //
         verifyException("br.com.swconsultoria.nfe.util.XmlNfeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Cancelar cancelar0 = new Cancelar();
  }
}
