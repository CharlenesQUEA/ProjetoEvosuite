/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 05:22:01 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.NFeAutorizacao;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4CallbackHandler;
import br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub;
import com.ctc.wstx.api.ReaderConfig;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.dom.WstxDOMWrappingWriter;
import com.ctc.wstx.io.BranchingReaderSource;
import com.ctc.wstx.io.ReaderBootstrapper;
import com.ctc.wstx.sr.ReaderCreator;
import com.ctc.wstx.sr.ValidatingStreamReader;
import com.ctc.wstx.stax.WstxInputFactory;
import com.ctc.wstx.sw.AsciiXmlWriter;
import com.ctc.wstx.sw.ISOLatin1XmlWriter;
import com.ctc.wstx.sw.NonNsStreamWriter;
import com.ctc.wstx.sw.RepairingNsStreamWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import java.io.CharArrayReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URL;
import java.nio.charset.Charset;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import javax.xml.transform.dom.DOMResult;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMMetaFactory;
import org.apache.axiom.om.OMMetaFactoryLocator;
import org.apache.axiom.om.OMXMLStreamReaderConfiguration;
import org.apache.axiom.om.ds.WrappedTextNodeOMDataSourceFromReader;
import org.apache.axiom.om.impl.dom.NamespaceDeclaration;
import org.apache.axiom.om.impl.llom.OMSourcedElementImpl;
import org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactory;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultCodeImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultDetailImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultRoleImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11HeaderBlockImpl;
import org.apache.axiom.soap.impl.llom.soap11.SOAP11FaultImpl;
import org.apache.axiom.util.stax.xop.ContentIDGenerator;
import org.apache.axiom.util.stax.xop.OptimizationPolicy;
import org.apache.axiom.util.stax.xop.XOPEncodingStreamWriter;
import org.apache.axis2.AxisFault;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.engine.AxisConfiguration;
import org.codehaus.stax2.XMLStreamWriter2;
import org.codehaus.stax2.ri.Stax2WriterAdapter;
import org.codehaus.stax2.util.StreamWriterDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NFeAutorizacao4Stub_ESTest extends NFeAutorizacao4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      nFeAutorizacao4Stub_NfeDadosMsgZip0.setNfeDadosMsgZip("]3F1J|\"{");
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultCodeImpl0, (String) null);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(wstxDOMWrappingWriter0);
      XMLStreamWriter2 xMLStreamWriter2_0 = Stax2WriterAdapter.wrapIfNecessary(streamWriterDelegate0);
      nFeAutorizacao4Stub_NfeDadosMsgZip0.serialize(nFeAutorizacao4Stub_NfeDadosMsgZip0.MY_QNAME, (XMLStreamWriter) xMLStreamWriter2_0, true);
      assertNull(xMLStreamWriter2_0.getEncoding());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, false);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, ":nfeDadosMsg", writerConfig0);
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub_NfeResultMsg0.serialize((QName) null, (XMLStreamWriter) simpleNsStreamWriter0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1488);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0, charset0);
      BranchingReaderSource branchingReaderSource0 = new BranchingReaderSource(readerConfig0, (String) null, (String) null, (URL) null, inputStreamReader0, false);
      ReaderBootstrapper readerBootstrapper0 = ReaderBootstrapper.getInstance("", "", inputStreamReader0, "wNZMPu");
      ValidatingStreamReader validatingStreamReader0 = ValidatingStreamReader.createValidatingStreamReader(branchingReaderSource0, (ReaderCreator) null, readerConfig0, readerBootstrapper0, false);
      try { 
        NFeAutorizacao4Stub.NfeResultMsg.Factory.parse(validatingStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // com.ctc.wstx.exc.WstxIOException: Pipe not connected
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      char[] charArray0 = new char[6];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      XMLStreamReader xMLStreamReader0 = wstxInputFactory0.createXMLStreamReader(" x^", (Reader) charArrayReader0);
      try { 
        NFeAutorizacao4Stub.NfeDadosMsgZip.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // com.ctc.wstx.exc.WstxUnexpectedCharException: Illegal character (NULL, unicode 0) encountered: not valid in any content\r
         //  at com.ctc.wstx.io.WstxInputLocation@0000000015
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeDadosMsgZip$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      configurationContext0.setParent(configurationContext0);
      NFeAutorizacao4CallbackHandler nFeAutorizacao4CallbackHandler0 = mock(NFeAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub0.startnfeAutorizacaoLote(nFeAutorizacao4Stub_NfeDadosMsg0, nFeAutorizacao4CallbackHandler0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0, "CopyProperties", true);
      NFeAutorizacao4CallbackHandler nFeAutorizacao4CallbackHandler0 = mock(NFeAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub0.startnfeAutorizacaoLote((NFeAutorizacao4Stub.NfeDadosMsg) null, nFeAutorizacao4CallbackHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub0.nfeAutorizacaoLote(nFeAutorizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = null;
      try {
        nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub((ConfigurationContext) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      configurationContext0.terminate();
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = null;
      try {
        nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis2.engine.ListenerManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = null;
      try {
        nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub((ConfigurationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = null;
      try {
        nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub((ConfigurationContext) null, "s`WhFz$7#Imw]p<", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      OMFactory oMFactory0 = oMLinkedListMetaFactory0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeAutorizacao4Stub_NfeDadosMsgZip0.getOMElement(nFeAutorizacao4Stub_NfeResultMsg0.MY_QNAME, oMFactory0);
      assertFalse(oMSourcedElementImpl0.definedNamespaceSet);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      NamespaceDeclaration namespaceDeclaration0 = new NamespaceDeclaration();
      OMFactory oMFactory0 = namespaceDeclaration0.getOMFactory();
      org.apache.axiom.om.impl.dom.OMSourcedElementImpl oMSourcedElementImpl0 = (org.apache.axiom.om.impl.dom.OMSourcedElementImpl)nFeAutorizacao4Stub_NfeDadosMsg0.getOMElement((QName) null, oMFactory0);
      assertEquals(0, oMSourcedElementImpl0.flags);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SOAP11FaultImpl sOAP11FaultImpl0 = new SOAP11FaultImpl();
      OMXMLStreamReaderConfiguration oMXMLStreamReaderConfiguration0 = new OMXMLStreamReaderConfiguration();
      XMLStreamReader xMLStreamReader0 = sOAP11FaultImpl0.defaultGetXMLStreamReader(true, oMXMLStreamReaderConfiguration0);
      try { 
        NFeAutorizacao4Stub.NfeDadosMsgZip.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("_R`:XD\"QBX", "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, true);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, "", writerConfig0);
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      nFeAutorizacao4Stub_NfeDadosMsgZip0.setNfeDadosMsgZip("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeDadosMsg$Factory");
      nFeAutorizacao4Stub_NfeDadosMsgZip0.serialize((QName) null, (XMLStreamWriter) repairingNsStreamWriter0);
      assertEquals("1.0", repairingNsStreamWriter0.getXmlVersion());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultCodeImpl0, (String) null);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(wstxDOMWrappingWriter0);
      XMLStreamWriter2 xMLStreamWriter2_0 = Stax2WriterAdapter.wrapIfNecessary(streamWriterDelegate0);
      try { 
        nFeAutorizacao4Stub_NfeDadosMsgZip0.serialize(sOAP11FaultCodeImpl0.qName, (XMLStreamWriter) xMLStreamWriter2_0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // nfeDadosMsgZip cannot be null !!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeDadosMsgZip", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = QName.valueOf("ONx+Ta!P{2]r;Vo0w");
      StringReader stringReader0 = new StringReader("ONx+Ta!P{2]r;Vo0w");
      WrappedTextNodeOMDataSourceFromReader wrappedTextNodeOMDataSourceFromReader0 = new WrappedTextNodeOMDataSourceFromReader(qName0, stringReader0);
      XMLStreamReader xMLStreamReader0 = wrappedTextNodeOMDataSourceFromReader0.getReader();
      try { 
        NFeAutorizacao4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement null
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      org.apache.axiom.om.impl.dom.OMSourcedElementImpl oMSourcedElementImpl0 = new org.apache.axiom.om.impl.dom.OMSourcedElementImpl();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter((OutputStream) null, writerConfig0, true);
      nFeAutorizacao4Stub_NfeDadosMsg0.setExtraElement(oMSourcedElementImpl0);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub_NfeDadosMsg0.serialize(nFeAutorizacao4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) repairingNsStreamWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ctc.wstx.sw.EncodingXmlWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultCodeImpl0, (String) null);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(wstxDOMWrappingWriter0);
      XMLStreamWriter2 xMLStreamWriter2_0 = Stax2WriterAdapter.wrapIfNecessary(streamWriterDelegate0);
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      try { 
        nFeAutorizacao4Stub_NfeDadosMsg0.serialize(nFeAutorizacao4Stub_NfeDadosMsgZip0.MY_QNAME, (XMLStreamWriter) xMLStreamWriter2_0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      org.apache.axiom.om.impl.dom.OMSourcedElementImpl oMSourcedElementImpl0 = new org.apache.axiom.om.impl.dom.OMSourcedElementImpl();
      QName qName0 = oMSourcedElementImpl0.getTextAsQName();
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter((OutputStream) null, writerConfig0, true);
      RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
      try { 
        nFeAutorizacao4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) repairingNsStreamWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SOAP11FaultRoleImpl sOAP11FaultRoleImpl0 = new SOAP11FaultRoleImpl();
      OMXMLStreamReaderConfiguration oMXMLStreamReaderConfiguration0 = new OMXMLStreamReaderConfiguration();
      XMLStreamReader xMLStreamReader0 = sOAP11FaultRoleImpl0.defaultGetXMLStreamReader(true, oMXMLStreamReaderConfiguration0);
      try { 
        NFeAutorizacao4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      OMSourcedElementImpl oMSourcedElementImpl0 = new OMSourcedElementImpl();
      QName qName0 = oMSourcedElementImpl0.getTextAsQName();
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, true);
      NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
      ContentIDGenerator contentIDGenerator0 = mock(ContentIDGenerator.class, new ViolatedAssumptionAnswer());
      OptimizationPolicy optimizationPolicy0 = mock(OptimizationPolicy.class, new ViolatedAssumptionAnswer());
      XOPEncodingStreamWriter xOPEncodingStreamWriter0 = new XOPEncodingStreamWriter(nonNsStreamWriter0, contentIDGenerator0, optimizationPolicy0);
      try { 
        nFeAutorizacao4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) xOPEncodingStreamWriter0);
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // Can not set write namespaces with non-namespace writer.
         //
         verifyException("com.ctc.wstx.sw.BaseStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      QName qName0 = sOAP11FaultCodeImpl0.getValueAsQName();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultCodeImpl0, (String) null);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(wstxDOMWrappingWriter0);
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) streamWriterDelegate0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.axiom.dom.DOMExceptionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultCodeImpl0, (String) null);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(wstxDOMWrappingWriter0);
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      nFeAutorizacao4Stub_NfeResultMsg0.setExtraElement(sOAP11FaultCodeImpl0);
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub_NfeResultMsg0.serialize(nFeAutorizacao4Stub_NfeDadosMsgZip0.MY_QNAME, (XMLStreamWriter) streamWriterDelegate0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axiom.om.impl.common.AxiomNamedInformationItemSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      try { 
        nFeAutorizacao4Stub0.nfeAutorizacaoLoteZip(nFeAutorizacao4Stub_NfeDadosMsgZip0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the https://nfe.fazenda.sp.gov.br/ws/nfeautorizacao4.asmx URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      try { 
        nFeAutorizacao4Stub0.nfeAutorizacaoLote(nFeAutorizacao4Stub_NfeDadosMsg0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the https://nfe.fazenda.sp.gov.br/ws/nfeautorizacao4.asmx URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NFeAutorizacao4Stub.NfeResultMsg.Factory nFeAutorizacao4Stub_NfeResultMsg_Factory0 = new NFeAutorizacao4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip.Factory nFeAutorizacao4Stub_NfeDadosMsgZip_Factory0 = new NFeAutorizacao4Stub.NfeDadosMsgZip.Factory();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NFeAutorizacao4Stub.ExtensionMapper nFeAutorizacao4Stub_ExtensionMapper0 = new NFeAutorizacao4Stub.ExtensionMapper();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      XMLStreamReader xMLStreamReader0 = sOAP11FaultDetailImpl0.getXMLStreamReader(false);
      try { 
        NFeAutorizacao4Stub.ExtensionMapper.getTypeObject("MI\"G A~WMrh)@xVOp", "$%4QHO6\"", xMLStreamReader0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // Unsupported type MI\"G A~WMrh)@xVOp $%4QHO6\"
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$ExtensionMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      String string0 = nFeAutorizacao4Stub_NfeDadosMsgZip0.getNfeDadosMsgZip();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeAutorizacao4Stub_NfeDadosMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      NFeAutorizacao4Stub.NfeDadosMsg nFeAutorizacao4Stub_NfeDadosMsg0 = new NFeAutorizacao4Stub.NfeDadosMsg();
      NFeAutorizacao4CallbackHandler nFeAutorizacao4CallbackHandler0 = mock(NFeAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      try { 
        nFeAutorizacao4Stub0.startnfeAutorizacaoLote(nFeAutorizacao4Stub_NfeDadosMsg0, nFeAutorizacao4CallbackHandler0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the https://nfe.fazenda.sp.gov.br/ws/nfeautorizacao4.asmx URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultCodeImpl0, (String) null);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(wstxDOMWrappingWriter0);
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      try { 
        nFeAutorizacao4Stub_NfeResultMsg0.serialize(nFeAutorizacao4Stub_NfeDadosMsgZip0.MY_QNAME, (XMLStreamWriter) streamWriterDelegate0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeAutorizacao4Stub_NfeResultMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NFeAutorizacao4Stub.NfeResultMsg nFeAutorizacao4Stub_NfeResultMsg0 = new NFeAutorizacao4Stub.NfeResultMsg();
      SOAP11HeaderBlockImpl sOAP11HeaderBlockImpl0 = new SOAP11HeaderBlockImpl();
      OMFactory oMFactory0 = sOAP11HeaderBlockImpl0.getOMFactory();
      org.apache.axiom.om.impl.dom.OMSourcedElementImpl oMSourcedElementImpl0 = (org.apache.axiom.om.impl.dom.OMSourcedElementImpl)nFeAutorizacao4Stub_NfeResultMsg0.getOMElement(nFeAutorizacao4Stub_NfeResultMsg0.MY_QNAME, oMFactory0);
      assertEquals((short)1, oMSourcedElementImpl0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0, "a69");
      NFeAutorizacao4Stub.NfeDadosMsgZip nFeAutorizacao4Stub_NfeDadosMsgZip0 = new NFeAutorizacao4Stub.NfeDadosMsgZip();
      NFeAutorizacao4CallbackHandler nFeAutorizacao4CallbackHandler0 = mock(NFeAutorizacao4CallbackHandler.class, new ViolatedAssumptionAnswer());
      try { 
        nFeAutorizacao4Stub0.startnfeAutorizacaoLoteZip(nFeAutorizacao4Stub_NfeDadosMsgZip0, nFeAutorizacao4CallbackHandler0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the a69 URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NFeAutorizacao4Stub.NfeDadosMsg.Factory nFeAutorizacao4Stub_NfeDadosMsg_Factory0 = new NFeAutorizacao4Stub.NfeDadosMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub0.nfeAutorizacaoLote((NFeAutorizacao4Stub.NfeDadosMsg) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = null;
      try {
        nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = null;
      try {
        nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeAutorizacao4Stub nFeAutorizacao4Stub0 = new NFeAutorizacao4Stub(configurationContext0);
      // Undeclared exception!
      try { 
        nFeAutorizacao4Stub0.nfeAutorizacaoLoteZip((NFeAutorizacao4Stub.NfeDadosMsgZip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeAutorizacao.NFeAutorizacao4Stub", e);
      }
  }
}
