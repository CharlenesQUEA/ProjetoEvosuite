/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 05:48:09 GMT 2024
 */

package br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.dom.WstxDOMWrappingWriter;
import com.ctc.wstx.stax.WstxInputFactory;
import com.ctc.wstx.sw.AsciiXmlWriter;
import com.ctc.wstx.sw.BufferingXmlWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;
import javax.xml.transform.dom.DOMResult;
import org.apache.axiom.core.NodeFactory;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMContainer;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMMetaFactory;
import org.apache.axiom.om.OMMetaFactoryLocator;
import org.apache.axiom.om.impl.dom.factory.OMDOMMetaFactory;
import org.apache.axiom.om.impl.llom.OMSourcedElementImpl;
import org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactory;
import org.apache.axiom.soap.impl.common.SOAP11Factory;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultCodeImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultDetailImpl;
import org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultReasonImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12BodyImpl;
import org.apache.axiom.soap.impl.dom.soap12.SOAP12HeaderBlockImpl;
import org.apache.axiom.soap.impl.llom.soap12.SOAP12EnvelopeImpl;
import org.apache.axis2.AxisFault;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.context.MessageContext;
import org.apache.axis2.databinding.ADBException;
import org.apache.axis2.engine.AxisConfiguration;
import org.codehaus.stax2.XMLStreamReader2;
import org.codehaus.stax2.ri.Stax2ReaderAdapter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NFeStatusServico4Stub_ESTest extends NFeStatusServico4Stub_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        NFeStatusServico4Stub.ExtensionMapper.getTypeObject("In", "[D0dm", (XMLStreamReader) null);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // Unsupported type In [D0dm
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$ExtensionMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      OMFactory oMFactory0 = oMLinkedListMetaFactory0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeStatusServico4Stub_NfeDadosMsg0.getOMElement((QName) null, oMFactory0);
      assertFalse(oMSourcedElementImpl0.definedNamespaceSet);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      XMLStreamReader xMLStreamReader0 = wstxInputFactory0.createXMLStreamReader("", (InputStream) byteArrayInputStream0);
      try { 
        NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog\r
         //  at com.ctc.wstx.io.WstxInputLocation@0000000015
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeResultMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      SOAP12HeaderBlockImpl sOAP12HeaderBlockImpl0 = new SOAP12HeaderBlockImpl();
      QName qName0 = sOAP12HeaderBlockImpl0.resolveQName("nfeResultMsg");
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      DOMResult dOMResult0 = new DOMResult(sOAP12HeaderBlockImpl0);
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      try { 
        nFeStatusServico4Stub_NfeResultMsg0.serialize(qName0, (XMLStreamWriter) wstxDOMWrappingWriter0);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.apache.axiom.core.DetachPolicy", false);
      OMDOMMetaFactory oMDOMMetaFactory0 = OMDOMMetaFactory.INSTANCE;
      SOAP12BodyImpl sOAP12BodyImpl0 = new SOAP12BodyImpl();
      NodeFactory nodeFactory0 = sOAP12BodyImpl0.coreGetNodeFactory();
      SOAP11Factory sOAP11Factory0 = new SOAP11Factory(oMDOMMetaFactory0, nodeFactory0);
      OMElement oMElement0 = sOAP11Factory0.createOMElement(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, (OMContainer) sOAP12BodyImpl0);
      nFeStatusServico4Stub_NfeResultMsg0.setExtraElement(oMElement0);
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, false);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "org.apache.axiom.core.DetachPolicy", writerConfig0);
      nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, false);
      assertEquals(0, simpleNsStreamWriter0.getAttributeCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub("tL4T(<CJP.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "TRANSPORT_SUCCEED", false);
      OMMetaFactoryLocator oMMetaFactoryLocator0 = mock(OMMetaFactoryLocator.class, new ViolatedAssumptionAnswer());
      doReturn((OMMetaFactory) null).when(oMMetaFactoryLocator0).getOMMetaFactory(anyString());
      OMAbstractFactory.setMetaFactoryLocator(oMMetaFactoryLocator0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No meta factory found for feature 'default'; this usually means that axiom-impl.jar is not in the classpath or that the META-INF/axiom.xml resource can't be read
         //
         verifyException("org.apache.axiom.om.OMAbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      MessageContext messageContext0 = configurationContext0.createMessageContext();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0);
      configurationContext0.setParent(messageContext0);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageContext.getCurrentMessageContext();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub((ConfigurationContext) null, "CopyProperties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SOAP12EnvelopeImpl sOAP12EnvelopeImpl0 = new SOAP12EnvelopeImpl();
      XMLStreamReader xMLStreamReader0 = sOAP12EnvelopeImpl0.getXMLStreamReaderWithoutCaching();
      sOAP12EnvelopeImpl0.localName = "NR1G.>VO+^Q,C+";
      XMLStreamReader2 xMLStreamReader2_0 = Stax2ReaderAdapter.wrapIfNecessary(xMLStreamReader0);
      try { 
        NFeStatusServico4Stub.NfeDadosMsg.Factory.parse(xMLStreamReader2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.apache.axis2.databinding.ADBException: Unexpected subelement NR1G.>VO+^Q,C+
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeDadosMsg$Factory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = new QName("dWGc1S,l|Z68XW<R}", "dWGc1S,l|Z68XW<R}");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(byteArrayOutputStream0);
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(outputStreamWriter0, writerConfig0, "dWGc1S,l|Z68XW<R}", true, byteArrayOutputStream0, (-1661));
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(bufferingXmlWriter0, "PJP_i+zgI?{R", writerConfig0);
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      QName qName0 = new QName("dWGc1S,l|Z68XW<R}", "dWGc1S,l|Z68XW<R}", "dWGc1S,l|Z68XW<R}");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(byteArrayOutputStream0);
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(outputStreamWriter0, writerConfig0, "dWGc1S,l|Z68XW<R}", true, byteArrayOutputStream0, (-1661));
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(bufferingXmlWriter0, "PJP_i+zgI?{R", writerConfig0);
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      MockFileWriter mockFileWriter0 = new MockFileWriter("&");
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockFileWriter0, writerConfig0, (String) null, true, (OutputStream) null, 0);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(bufferingXmlWriter0, "", writerConfig0);
      nFeStatusServico4Stub_NfeDadosMsg0.localExtraElement = (OMElement) sOAP11FaultDetailImpl0;
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize(nFeStatusServico4Stub_NfeResultMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axiom.om.impl.common.AxiomNamedInformationItemSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      SOAP11FaultCodeImpl sOAP11FaultCodeImpl0 = new SOAP11FaultCodeImpl();
      QName qName0 = sOAP11FaultCodeImpl0.getValueAsQName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(bufferedOutputStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "nfeDadosMsg", writerConfig0);
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize(qName0, (XMLStreamWriter) simpleNsStreamWriter0, false);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      org.apache.axiom.om.impl.dom.OMSourcedElementImpl oMSourcedElementImpl0 = new org.apache.axiom.om.impl.dom.OMSourcedElementImpl();
      XMLStreamReader xMLStreamReader0 = oMSourcedElementImpl0.getXMLStreamReader(false);
      try { 
        NFeStatusServico4Stub.NfeResultMsg.Factory.parse(xMLStreamReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.apache.axiom.core.DetachPolicy", true);
      WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
      AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, true);
      SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "org.apache.axiom.core.DetachPolicy", writerConfig0);
      try { 
        nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) simpleNsStreamWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      SOAP11FaultDetailImpl sOAP11FaultDetailImpl0 = new SOAP11FaultDetailImpl();
      DOMResult dOMResult0 = new DOMResult(sOAP11FaultDetailImpl0);
      WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
      WstxDOMWrappingWriter wstxDOMWrappingWriter0 = WstxDOMWrappingWriter.createFrom(writerConfig0, dOMResult0);
      try { 
        nFeStatusServico4Stub_NfeResultMsg0.serialize(nFeStatusServico4Stub_NfeDadosMsg0.MY_QNAME, (XMLStreamWriter) wstxDOMWrappingWriter0, true);
        fail("Expecting exception: ADBException");
      
      } catch(ADBException e) {
         //
         // extraElement cannot be null!!
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeResultMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub((ConfigurationContext) null, ".#1?x{", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AxisConfiguration axisConfiguration0 = new AxisConfiguration();
      ConfigurationContext configurationContext0 = new ConfigurationContext(axisConfiguration0);
      NFeStatusServico4Stub nFeStatusServico4Stub0 = new NFeStatusServico4Stub(configurationContext0, "TRANSPORT_SUCCEED", false);
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      try { 
        nFeStatusServico4Stub0.nfeStatusServicoNF(nFeStatusServico4Stub_NfeDadosMsg0);
        fail("Expecting exception: AxisFault");
      
      } catch(AxisFault e) {
         //
         // The system cannot infer the transport information from the TRANSPORT_SUCCEED URL.
         //
         verifyException("org.apache.axis2.description.ClientUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFeStatusServico4Stub.ExtensionMapper nFeStatusServico4Stub_ExtensionMapper0 = new NFeStatusServico4Stub.ExtensionMapper();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg.Factory nFeStatusServico4Stub_NfeDadosMsg_Factory0 = new NFeStatusServico4Stub.NfeDadosMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg.Factory nFeStatusServico4Stub_NfeResultMsg_Factory0 = new NFeStatusServico4Stub.NfeResultMsg.Factory();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMLinkedListMetaFactory oMLinkedListMetaFactory0 = OMLinkedListMetaFactory.INSTANCE;
      OMFactory oMFactory0 = oMLinkedListMetaFactory0.getOMFactory();
      OMSourcedElementImpl oMSourcedElementImpl0 = (OMSourcedElementImpl)nFeStatusServico4Stub_NfeResultMsg0.getOMElement((QName) null, oMFactory0);
      assertFalse(oMSourcedElementImpl0.isExpanded);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NFeStatusServico4Stub.NfeResultMsg nFeStatusServico4Stub_NfeResultMsg0 = new NFeStatusServico4Stub.NfeResultMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeResultMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      SOAP11FaultReasonImpl sOAP11FaultReasonImpl0 = new SOAP11FaultReasonImpl();
      nFeStatusServico4Stub_NfeDadosMsg0.setExtraElement(sOAP11FaultReasonImpl0);
      assertEquals((short)1, sOAP11FaultReasonImpl0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      OMElement oMElement0 = nFeStatusServico4Stub_NfeDadosMsg0.getExtraElement();
      assertNull(oMElement0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      // Undeclared exception!
      try { 
        nFeStatusServico4Stub_NfeDadosMsg0.serialize((QName) null, (XMLStreamWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.wsdl.NFeStatusServico4MS.NFeStatusServico4Stub$NfeDadosMsg", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NFeStatusServico4Stub.NfeDadosMsg nFeStatusServico4Stub_NfeDadosMsg0 = new NFeStatusServico4Stub.NfeDadosMsg();
      NFeStatusServico4Stub nFeStatusServico4Stub0 = null;
      try {
        nFeStatusServico4Stub0 = new NFeStatusServico4Stub("XQ=r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }
}
