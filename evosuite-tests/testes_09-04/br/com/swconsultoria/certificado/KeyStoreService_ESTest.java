/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 06:34:47 GMT 2024
 */

package br.com.swconsultoria.certificado;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.certificado.Certificado;
import br.com.swconsultoria.certificado.KeyStoreService;
import java.nio.file.AccessDeniedException;
import java.nio.file.InvalidPathException;
import java.security.KeyStoreException;
import java.security.NoSuchProviderException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyStoreService_ESTest extends KeyStoreService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Certificado certificado0 = new Certificado();
      certificado0.setArquivo("");
      try { 
        KeyStoreService.getKeyStoreArquivo(certificado0);
        fail("Expecting exception: AccessDeniedException");
      
      } catch(AccessDeniedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Certificado certificado0 = new Certificado();
      // Undeclared exception!
      try { 
        KeyStoreService.getKeyStoreArquivo(certificado0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Certificado certificado0 = new Certificado();
      certificado0.setArquivo("RW(rjwK;J3");
      try { 
        KeyStoreService.getKeyStoreArquivo(certificado0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificado Digital n\u00E3o Encontrado
         //
         verifyException("br.com.swconsultoria.certificado.KeyStoreService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Certificado certificado0 = new Certificado();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(":v=05`<e");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      certificado0.setArquivo("/:v=05`<e");
      // Undeclared exception!
      try { 
        KeyStoreService.getKeyStoreArquivo(certificado0);
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Certificado certificado0 = new Certificado();
      // Undeclared exception!
      try { 
        KeyStoreService.getKeyStoreArquivoByte((byte[]) null, certificado0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Certificado certificado0 = new Certificado();
      // Undeclared exception!
      try { 
        KeyStoreService.getKeyStoreArquivoByte(byteArray0, certificado0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.certificado.KeyStoreService", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      try { 
        KeyStoreService.getKeyStoreRepositorioWindows();
        fail("Expecting exception: NoSuchProviderException");
      
      } catch(NoSuchProviderException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Certificado certificado0 = new Certificado();
      // Undeclared exception!
      try { 
        KeyStoreService.getKeyStoreA3(certificado0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Security", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      try { 
        KeyStoreService.getKeyStoreRepositorioMac();
        fail("Expecting exception: KeyStoreException");
      
      } catch(KeyStoreException e) {
         //
         // KeychainStore not found
         //
         verifyException("java.security.KeyStore", e);
      }
  }
}
