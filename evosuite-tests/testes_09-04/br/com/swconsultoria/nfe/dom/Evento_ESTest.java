/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 10:09:55 GMT 2024
 */

package br.com.swconsultoria.nfe.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.dom.Evento;
import br.com.swconsultoria.nfe.dom.EventoEpec;
import br.com.swconsultoria.nfe.dom.enuns.ManifestacaoEnum;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evento_ESTest extends Evento_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evento evento0 = new Evento();
      ManifestacaoEnum manifestacaoEnum0 = ManifestacaoEnum.CIENCIA_DA_OPERACAO;
      evento0.setTipoManifestacao(manifestacaoEnum0);
      ManifestacaoEnum manifestacaoEnum1 = evento0.getTipoManifestacao();
      assertEquals("210210", manifestacaoEnum1.getCodigo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setSequencia(2407);
      int int0 = evento0.getSequencia();
      assertEquals(2407, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setSequencia((-1842));
      int int0 = evento0.getSequencia();
      assertEquals((-1842), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setProtocolo("29");
      String string0 = evento0.getProtocolo();
      assertEquals("29", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setMotivo("RJ");
      String string0 = evento0.getMotivo();
      assertEquals("RJ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setMotivo("");
      String string0 = evento0.getMotivo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Evento evento0 = new Evento();
      EventoEpec eventoEpec0 = new EventoEpec();
      evento0.setEventoEpec(eventoEpec0);
      EventoEpec eventoEpec1 = evento0.getEventoEpec();
      assertSame(eventoEpec1, eventoEpec0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setCpf("");
      String string0 = evento0.getCpf();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setCnpj("Cx[");
      String string0 = evento0.getCnpj();
      assertEquals("Cx[", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setCnpj("");
      String string0 = evento0.getCnpj();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setChaveSusbstituta("`Xv");
      String string0 = evento0.getChaveSusbstituta();
      assertEquals("`Xv", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setChaveSusbstituta("");
      String string0 = evento0.getChaveSusbstituta();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setChave("");
      String string0 = evento0.getChave();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Evento evento0 = new Evento();
      int int0 = evento0.getSequencia();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setCpf("Confirmacao da Operacao");
      String string0 = evento0.getCpf();
      assertEquals("Confirmacao da Operacao", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Evento evento0 = new Evento();
      LocalDateTime localDateTime0 = evento0.getDataEvento();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setProtocolo("");
      String string0 = evento0.getProtocolo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Evento evento0 = new Evento();
      String string0 = evento0.getCnpj();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Evento evento0 = new Evento();
      String string0 = evento0.getProtocolo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Evento evento0 = new Evento();
      evento0.setChave("Confirmacao da Operacao");
      String string0 = evento0.getChave();
      assertEquals("Confirmacao da Operacao", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Evento evento0 = new Evento();
      EventoEpec eventoEpec0 = evento0.getEventoEpec();
      assertNull(eventoEpec0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Evento evento0 = new Evento();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      evento0.setDataEvento(localDateTime0);
      LocalDateTime localDateTime1 = evento0.getDataEvento();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Evento evento0 = new Evento();
      String string0 = evento0.getMotivo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Evento evento0 = new Evento();
      String string0 = evento0.getCpf();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Evento evento0 = new Evento();
      ManifestacaoEnum manifestacaoEnum0 = evento0.getTipoManifestacao();
      evento0.setTipoManifestacao(manifestacaoEnum0);
      assertNull(evento0.getChaveSusbstituta());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Evento evento0 = new Evento();
      String string0 = evento0.getChaveSusbstituta();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Evento evento0 = new Evento();
      String string0 = evento0.getChave();
      assertNull(string0);
  }
}
