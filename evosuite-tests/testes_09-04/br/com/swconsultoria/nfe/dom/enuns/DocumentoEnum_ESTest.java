/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 08:04:26 GMT 2024
 */

package br.com.swconsultoria.nfe.dom.enuns;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DocumentoEnum_ESTest extends DocumentoEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.getByModelo("55");
      assertEquals(DocumentoEnum.NFE, documentoEnum0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.getByTipo("NFCe");
      assertEquals(DocumentoEnum.NFCE, documentoEnum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentoEnum[] documentoEnumArray0 = DocumentoEnum.values();
      assertEquals(2, documentoEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.valueOf("NFCE");
      assertEquals("65", documentoEnum0.getModelo());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.getByModelo("65");
      assertEquals(DocumentoEnum.NFCE, documentoEnum0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentoEnum.getByModelo("NFe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        DocumentoEnum.getByTipo("PEe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.getByTipo("NFe");
      assertEquals(DocumentoEnum.NFE, documentoEnum0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.NFE;
      String string0 = documentoEnum0.getTipo();
      assertEquals("NFe", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DocumentoEnum documentoEnum0 = DocumentoEnum.NFCE;
      String string0 = documentoEnum0.getModelo();
      assertEquals("65", string0);
  }
}
