/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 08:19:30 GMT 2024
 */

package br.com.swconsultoria.nfe.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.certificado.Certificado;
import br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;
import br.com.swconsultoria.nfe.dom.Proxy;
import br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;
import br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;
import java.io.ByteArrayInputStream;
import java.nio.charset.Charset;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConfiguracoesNfe_ESTest extends ConfiguracoesNfe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
      
      configuracoesNfe0.setValidacaoDocumento(false);
      boolean boolean0 = configuracoesNfe0.isValidacaoDocumento();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setContigenciaSVC(true);
      boolean boolean0 = configuracoesNfe0.isContigenciaSVC();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      Integer integer0 = new Integer((-1));
      configuracoesNfe0.setTimeout(integer0);
      configuracoesNfe0.getTimeout();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      Integer integer0 = new Integer(1201);
      configuracoesNfe0.setTimeout(integer0);
      configuracoesNfe0.getTimeout();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      Integer integer0 = new Integer(23);
      configuracoesNfe0.setRetry(integer0);
      configuracoesNfe0.getRetry();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      Integer integer0 = new Integer((-607));
      configuracoesNfe0.setRetry(integer0);
      configuracoesNfe0.getRetry();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      EstadosEnum estadosEnum0 = EstadosEnum.GO;
      configuracoesNfe0.setEstado(estadosEnum0);
      configuracoesNfe0.getEstado();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EstadosEnum estadosEnum0 = EstadosEnum.MT;
      AmbienteEnum ambienteEnum0 = AmbienteEnum.HOMOLOGACAO;
      Certificado certificado0 = new Certificado();
      // Undeclared exception!
      try { 
        ConfiguracoesNfe.criarConfiguracoes(estadosEnum0, ambienteEnum0, certificado0, "|36_b", (ZoneId) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zone ID n\u00E3o pode ser Nulo.
         //
         verifyException("br.com.swconsultoria.nfe.dom.ConfiguracoesNfe", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EstadosEnum estadosEnum0 = EstadosEnum.MA;
      AmbienteEnum ambienteEnum0 = AmbienteEnum.HOMOLOGACAO;
      // Undeclared exception!
      try { 
        ConfiguracoesNfe.criarConfiguracoes(estadosEnum0, ambienteEnum0, (Certificado) null, "[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Certificado n\u00E3o pode ser Nulo.
         //
         verifyException("br.com.swconsultoria.nfe.dom.ConfiguracoesNfe", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EstadosEnum estadosEnum0 = EstadosEnum.RR;
      AmbienteEnum ambienteEnum0 = AmbienteEnum.PRODUCAO;
      Certificado certificado0 = new Certificado();
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(667);
      try { 
        ConfiguracoesNfe.criarConfiguracoes(estadosEnum0, ambienteEnum0, certificado0, "", (ZoneId) zoneOffset0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificado Vencido/Inv\u00E1lido
         //
         verifyException("br.com.swconsultoria.nfe.dom.ConfiguracoesNfe", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      ZoneId zoneId0 = ZoneId.systemDefault();
      configuracoesNfe0.setZoneId(zoneId0);
      configuracoesNfe0.getZoneId();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      AmbienteEnum ambienteEnum0 = AmbienteEnum.PRODUCAO;
      configuracoesNfe0.setAmbiente(ambienteEnum0);
      configuracoesNfe0.getAmbiente();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setEncode("");
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setEncode("123456");
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setEncode((String) null);
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      configuracoesNfe0.setCacert(byteArrayInputStream0);
      configuracoesNfe0.getCacert();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      boolean boolean0 = configuracoesNfe0.isValidacaoDocumento();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getCacert();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getCertificado();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getEstado();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getRetry();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.isContigenciaSVC();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setArquivoWebService("miOpXDL_b_");
      configuracoesNfe0.getArquivoWebService();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getArquivoWebService();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getAmbiente();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getZoneId();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      // Undeclared exception!
      try { 
        configuracoesNfe0.iniciaConfiguracoes();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/httpclient/protocol/ProtocolSocketFactory
         //
         verifyException("br.com.swconsultoria.nfe.dom.ConfiguracoesNfe", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      Integer integer0 = configuracoesNfe0.getTimeout();
      configuracoesNfe0.setTimeout(integer0);
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setEncode((Charset) null);
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getPastaSchemas();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getProxy();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.setProxy((Proxy) null);
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EstadosEnum estadosEnum0 = EstadosEnum.SE;
      AmbienteEnum ambienteEnum0 = AmbienteEnum.PRODUCAO;
      Certificado certificado0 = new Certificado();
      try { 
        ConfiguracoesNfe.criarConfiguracoes(estadosEnum0, ambienteEnum0, certificado0, "123456");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Certificado Vencido/Inv\u00E1lido
         //
         verifyException("br.com.swconsultoria.nfe.dom.ConfiguracoesNfe", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      configuracoesNfe0.getEncode();
      assertTrue(configuracoesNfe0.isValidacaoDocumento());
  }
}
