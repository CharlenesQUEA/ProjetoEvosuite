/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 07:11:24 GMT 2024
 */

package br.com.swconsultoria.nfe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.swconsultoria.nfe.Assinar;
import br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;
import br.com.swconsultoria.nfe.dom.enuns.AssinaturaEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Assinar_ESTest extends Assinar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      AssinaturaEnum assinaturaEnum0 = AssinaturaEnum.EVENTO;
      // Undeclared exception!
      try { 
        Assinar.assinaNfe(configuracoesNfe0, (String) null, assinaturaEnum0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.swconsultoria.nfe.Assinar", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConfiguracoesNfe configuracoesNfe0 = new ConfiguracoesNfe();
      AssinaturaEnum assinaturaEnum0 = AssinaturaEnum.INUTILIZACAO;
      try { 
        Assinar.assinaNfe(configuracoesNfe0, "C:UAerscharlDownloadsDe&etar depois~Pluins evosuiteaa_NFe-mwsterSchemas", assinaturaEnum0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Erro ao Assinar NfeContent is not allowed in prolog.
         //
         verifyException("br.com.swconsultoria.nfe.Assinar", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Assinar assinar0 = new Assinar();
  }
}
