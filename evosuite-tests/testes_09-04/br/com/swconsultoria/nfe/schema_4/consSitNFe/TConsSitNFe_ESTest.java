/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 11:39:00 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.consSitNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TConsSitNFe;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TConsSitNFe_ESTest extends TConsSitNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.setXServ("E5h-uG");
      String string0 = tConsSitNFe0.getXServ();
      assertEquals("E5h-uG", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.xServ = "";
      String string0 = tConsSitNFe0.getXServ();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.setVersao("%yJ");
      String string0 = tConsSitNFe0.getVersao();
      assertEquals("%yJ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.versao = "";
      String string0 = tConsSitNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.setTpAmb("]&U;)N v");
      String string0 = tConsSitNFe0.getTpAmb();
      assertEquals("]&U;)N v", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.tpAmb = "";
      String string0 = tConsSitNFe0.getTpAmb();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.chNFe = "aTU";
      tConsSitNFe0.chNFe = "";
      String string0 = tConsSitNFe0.getChNFe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      String string0 = tConsSitNFe0.getTpAmb();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      String string0 = tConsSitNFe0.getXServ();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      String string0 = tConsSitNFe0.getChNFe();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      String string0 = tConsSitNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TConsSitNFe tConsSitNFe0 = new TConsSitNFe();
      tConsSitNFe0.setChNFe("78v4*`}h=k");
      String string0 = tConsSitNFe0.getChNFe();
      assertEquals("78v4*`}h=k", string0);
  }
}
