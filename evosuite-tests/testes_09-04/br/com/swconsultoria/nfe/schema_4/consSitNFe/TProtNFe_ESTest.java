/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 07:17:58 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.consSitNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.SignatureType;
import br.com.swconsultoria.nfe.schema_4.consSitNFe.TProtNFe;
import javax.xml.datatype.XMLGregorianCalendar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TProtNFe_ESTest extends TProtNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setId("[V2\"Rf");
      String string0 = tProtNFe_InfProt0.getId();
      assertEquals("[V2\"Rf", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setXMotivo("br.com.swconsultoria.nfe.schema_4.consSitNFe.TProtNFe");
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.TProtNFe", tProtNFe_InfProt0.getXMotivo());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.xMotivo = "^VkzB} =/eSx%3a`n";
      String string0 = tProtNFe_InfProt0.getXMotivo();
      assertEquals("^VkzB} =/eSx%3a`n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setNProt("s!Fedf0N/XYLq");
      String string0 = tProtNFe_InfProt0.getXMotivo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setCStat("");
      assertNull(tProtNFe_InfProt0.getXMotivo());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.cStat = "[V2\"Rf";
      String string0 = tProtNFe_InfProt0.getCStat();
      assertEquals("[V2\"Rf", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      byte[] byteArray0 = new byte[8];
      tProtNFe_InfProt0.setDigVal(byteArray0);
      assertNull(tProtNFe_InfProt0.getNProt());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.nProt = "br.com.swconsultoria.nfe.schema_4.consSitNFe.X509DataType";
      String string0 = tProtNFe_InfProt0.getNProt();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.X509DataType", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setVerAplic("br.com.swconsultoria.nfe.schema_4.consSitNFe.X509DataType");
      String string0 = tProtNFe_InfProt0.getNProt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setChNFe(";MI8");
      String string0 = tProtNFe_InfProt0.getChNFe();
      assertEquals(";MI8", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setVerAplic("br.com.swconsultoria.nfe.schema_4.consSitNFe.X509DataType");
      String string0 = tProtNFe_InfProt0.getVerAplic();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.X509DataType", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setTpAmb("e{mC4i[|s");
      String string0 = tProtNFe_InfProt0.getTpAmb();
      assertEquals("e{mC4i[|s", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      tProtNFe0.setVersao("br.com.swconsultoria.nfe.schema_4.consSitNFe.TProtNFe");
      String string0 = tProtNFe0.getVersao();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consSitNFe.TProtNFe", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      tProtNFe0.setVersao("");
      String string0 = tProtNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      SignatureType signatureType0 = new SignatureType();
      tProtNFe0.setSignature(signatureType0);
      SignatureType signatureType1 = tProtNFe0.getSignature();
      assertSame(signatureType1, signatureType0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      SignatureType signatureType0 = tProtNFe0.getSignature();
      assertNull(signatureType0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      TProtNFe.InfProt tProtNFe_InfProt0 = tProtNFe0.getInfProt();
      assertNull(tProtNFe_InfProt0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      String string0 = tProtNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TProtNFe tProtNFe0 = new TProtNFe();
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe0.setInfProt(tProtNFe_InfProt0);
      TProtNFe.InfProt tProtNFe_InfProt1 = tProtNFe0.getInfProt();
      assertSame(tProtNFe_InfProt1, tProtNFe_InfProt0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      byte[] byteArray0 = tProtNFe_InfProt0.getDigVal();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      tProtNFe_InfProt0.setDhRecbto((XMLGregorianCalendar) null);
      assertNull(tProtNFe_InfProt0.getNProt());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TProtNFe.InfProt tProtNFe_InfProt0 = new TProtNFe.InfProt();
      XMLGregorianCalendar xMLGregorianCalendar0 = tProtNFe_InfProt0.getDhRecbto();
      assertNull(xMLGregorianCalendar0);
  }
}
