/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Apr 09 09:36:08 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.consReciNFe;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class TEnviNFe_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "br.com.swconsultoria.nfe.schema_4.consReciNFe.TEnviNFe"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\charl\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\charl\\Downloads\\Deletar depois\\Plugins evosuite\\Java_NFe-master"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\charl"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "charl"); 
    java.lang.System.setProperty("user.timezone", "America/Sao_Paulo"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TEnviNFe_ESTest_scaffolding.class.getClassLoader() ,
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$InfSolicNFF",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Total",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Dest",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TInfRespTec",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TUf",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignatureType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$InfIntermed",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Transp",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TLocal",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TUfEmi",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Exporta",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Total$ICMSTot",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Cobr$Fat",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Avulsa",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignedInfoType$CanonicalizationMethod",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Cana",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Total$ISSQNtot",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFeSupl",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignedInfoType$SignatureMethod",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignedInfoType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Compra",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TEndereco",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Emit",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Pag",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.ReferenceType$DigestMethod",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$InfAdic",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignatureValueType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TVeiculo",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Transp$RetTransp",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Transp$Transporta",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TEnderEmi",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.KeyInfoType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.ReferenceType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TEnviNFe",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Cobr",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Total$RetTrib",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe$Ide",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.X509DataType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TEnviNFe_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TEnviNFe",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFe",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TNFe$InfNFeSupl",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignatureType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignedInfoType",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.TLocal",
      "br.com.swconsultoria.nfe.schema_4.consReciNFe.SignatureValueType"
    );
  }
}
