/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 10:02:03 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.consReciNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.consReciNFe.TProtNFe;
import br.com.swconsultoria.nfe.schema_4.consReciNFe.TRetConsReciNFe;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TRetConsReciNFe_ESTest extends TRetConsReciNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setXMsg("c<[2)>z-[Y#}P");
      String string0 = tRetConsReciNFe0.getXMsg();
      assertEquals("c<[2)>z-[Y#}P", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setXMsg("");
      String string0 = tRetConsReciNFe0.getXMsg();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setXMotivo("Zrct");
      String string0 = tRetConsReciNFe0.getXMotivo();
      assertEquals("Zrct", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.xMotivo = "";
      String string0 = tRetConsReciNFe0.getXMotivo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setVersao("!a/sq!T5qWLA\"$");
      String string0 = tRetConsReciNFe0.getVersao();
      assertEquals("!a/sq!T5qWLA\"$", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setVersao("");
      String string0 = tRetConsReciNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setVerAplic("br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType");
      String string0 = tRetConsReciNFe0.getVerAplic();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setVerAplic("");
      String string0 = tRetConsReciNFe0.getVerAplic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setTpAmb("");
      String string0 = tRetConsReciNFe0.getTpAmb();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      LinkedList<TProtNFe> linkedList0 = new LinkedList<TProtNFe>();
      TProtNFe tProtNFe0 = new TProtNFe();
      linkedList0.add(tProtNFe0);
      tRetConsReciNFe0.protNFe = (List<TProtNFe>) linkedList0;
      List<TProtNFe> list0 = tRetConsReciNFe0.getProtNFe();
      assertTrue(list0.contains(tProtNFe0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setNRec("br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType");
      String string0 = tRetConsReciNFe0.getNRec();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.nRec = "";
      String string0 = tRetConsReciNFe0.getNRec();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.dhRecbto = "br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType";
      String string0 = tRetConsReciNFe0.getDhRecbto();
      assertEquals("br.com.swconsultoria.nfe.schema_4.consReciNFe.TransformsType", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setDhRecbto("");
      String string0 = tRetConsReciNFe0.getDhRecbto();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.cuf = "@g0#*}I}N/~g&/H";
      String string0 = tRetConsReciNFe0.getCUF();
      assertEquals("@g0#*}I}N/~g&/H", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setCUF("");
      String string0 = tRetConsReciNFe0.getCUF();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setCStat("fW$xMRby");
      String string0 = tRetConsReciNFe0.getCStat();
      assertEquals("fW$xMRby", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setCStat("");
      String string0 = tRetConsReciNFe0.getCStat();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setCMsg("");
      String string0 = tRetConsReciNFe0.getCMsg();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      List<TProtNFe> list0 = tRetConsReciNFe0.getProtNFe();
      List<TProtNFe> list1 = tRetConsReciNFe0.getProtNFe();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getXMsg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setCMsg("x");
      String string0 = tRetConsReciNFe0.getCMsg();
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getNRec();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getVerAplic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getXMotivo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getTpAmb();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getDhRecbto();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getCUF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      tRetConsReciNFe0.setTpAmb("x");
      String string0 = tRetConsReciNFe0.getTpAmb();
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getCMsg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TRetConsReciNFe tRetConsReciNFe0 = new TRetConsReciNFe();
      String string0 = tRetConsReciNFe0.getCStat();
      assertNull(string0);
  }
}
