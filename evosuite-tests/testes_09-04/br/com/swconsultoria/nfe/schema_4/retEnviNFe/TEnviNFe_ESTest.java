/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 12:00:51 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.retEnviNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.retEnviNFe.TEnviNFe;
import br.com.swconsultoria.nfe.schema_4.retEnviNFe.TNFe;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TEnviNFe_ESTest extends TEnviNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      tEnviNFe0.setVersao("");
      String string0 = tEnviNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      LinkedList<TNFe> linkedList0 = new LinkedList<TNFe>();
      tEnviNFe0.nFe = (List<TNFe>) linkedList0;
      linkedList0.add(0, (TNFe) null);
      List<TNFe> list0 = tEnviNFe0.getNFe();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      tEnviNFe0.setIndSinc("");
      String string0 = tEnviNFe0.getIndSinc();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      tEnviNFe0.setIdLote("");
      String string0 = tEnviNFe0.getIdLote();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      List<TNFe> list0 = tEnviNFe0.getNFe();
      List<TNFe> list1 = tEnviNFe0.getNFe();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      tEnviNFe0.setIdLote("7U<[c|9.~ZmJ!go`");
      String string0 = tEnviNFe0.getIdLote();
      assertEquals("7U<[c|9.~ZmJ!go`", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      String string0 = tEnviNFe0.getIdLote();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      String string0 = tEnviNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      tEnviNFe0.setIndSinc("7U<[c|9.~ZmJ!go`");
      String string0 = tEnviNFe0.getIndSinc();
      assertEquals("7U<[c|9.~ZmJ!go`", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      tEnviNFe0.setVersao("7U<[c|9.~ZmJ!go`");
      String string0 = tEnviNFe0.getVersao();
      assertEquals("7U<[c|9.~ZmJ!go`", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TEnviNFe tEnviNFe0 = new TEnviNFe();
      String string0 = tEnviNFe0.getIndSinc();
      assertNull(string0);
  }
}
