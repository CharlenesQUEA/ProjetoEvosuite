/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 06:47:39 GMT 2024
 */

package br.com.swconsultoria.nfe.schema_4.retConsReciNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TInfRespTec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TInfRespTec_ESTest extends TInfRespTec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.xContato = "";
      String string0 = tInfRespTec0.getXContato();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setIdCSRT("m('`*mu~NR3GY");
      String string0 = tInfRespTec0.getIdCSRT();
      assertEquals("m('`*mu~NR3GY", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      byte[] byteArray0 = new byte[2];
      tInfRespTec0.setHashCSRT(byteArray0);
      byte[] byteArray1 = tInfRespTec0.getHashCSRT();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      byte[] byteArray0 = new byte[0];
      tInfRespTec0.hashCSRT = byteArray0;
      byte[] byteArray1 = tInfRespTec0.getHashCSRT();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.fone = "Px13A;y>FT|4F^";
      String string0 = tInfRespTec0.getFone();
      assertEquals("Px13A;y>FT|4F^", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setFone("");
      String string0 = tInfRespTec0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setEmail("GD*Ic@ax(P");
      String string0 = tInfRespTec0.getEmail();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setEmail("");
      String string0 = tInfRespTec0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setCNPJ("Ux#]Ih B7hImP~\"`d%");
      String string0 = tInfRespTec0.getCNPJ();
      assertEquals("Ux#]Ih B7hImP~\"`d%", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.cnpj = "";
      String string0 = tInfRespTec0.getCNPJ();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      byte[] byteArray0 = tInfRespTec0.getHashCSRT();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      String string0 = tInfRespTec0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      String string0 = tInfRespTec0.getXContato();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setIdCSRT("");
      String string0 = tInfRespTec0.getIdCSRT();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      String string0 = tInfRespTec0.getCNPJ();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      tInfRespTec0.setXContato("br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TInfRespTec");
      String string0 = tInfRespTec0.getXContato();
      assertEquals("br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TInfRespTec", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      String string0 = tInfRespTec0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TInfRespTec tInfRespTec0 = new TInfRespTec();
      String string0 = tInfRespTec0.getIdCSRT();
      assertNull(string0);
  }
}
