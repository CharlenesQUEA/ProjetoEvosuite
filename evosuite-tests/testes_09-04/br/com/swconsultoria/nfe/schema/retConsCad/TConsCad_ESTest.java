/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 07:50:12 GMT 2024
 */

package br.com.swconsultoria.nfe.schema.retConsCad;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema.retConsCad.TConsCad;
import br.com.swconsultoria.nfe.schema.retConsCad.TUfCons;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TConsCad_ESTest extends TConsCad_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad_InfCons0.setCPF("0");
      assertNull(tConsCad_InfCons0.getUF());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad_InfCons0.xServ = "";
      tConsCad0.infCons = tConsCad_InfCons0;
      String string0 = tConsCad0.infCons.getCPF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad0.infCons = tConsCad_InfCons0;
      tConsCad_InfCons0.setIE("H-");
      String string0 = tConsCad0.infCons.getCPF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad0.infCons = tConsCad_InfCons0;
      tConsCad_InfCons0.cnpj = "br.com.swconsultoria.nfe.schema.retConsCad.TConsCad";
      String string0 = tConsCad0.infCons.getCPF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad0.infCons = tConsCad_InfCons0;
      tConsCad_InfCons0.cnpj = "br.com.swconsultoria.nfe.schema.retConsCad.TConsCad";
      String string0 = tConsCad0.infCons.getCNPJ();
      assertEquals("br.com.swconsultoria.nfe.schema.retConsCad.TConsCad", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad_InfCons0.ie = "A9,!y3";
      String string0 = tConsCad_InfCons0.getIE();
      assertEquals("A9,!y3", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad0.infCons = tConsCad_InfCons0;
      tConsCad_InfCons0.setXServ("");
      String string0 = tConsCad0.infCons.getXServ();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      TConsCad tConsCad0 = new TConsCad();
      tConsCad0.setInfCons(tConsCad_InfCons0);
      assertNull(tConsCad_InfCons0.getCPF());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      tConsCad0.setVersao("br.com.swconsultoria.nfe.schema.retConsCad.TConsCad");
      String string0 = tConsCad0.getVersao();
      assertEquals("br.com.swconsultoria.nfe.schema.retConsCad.TConsCad", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad0.infCons = tConsCad_InfCons0;
      TConsCad.InfCons tConsCad_InfCons1 = tConsCad0.getInfCons();
      assertNull(tConsCad_InfCons1.getCNPJ());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad0.infCons = tConsCad_InfCons0;
      TUfCons tUfCons0 = TUfCons.CE;
      tConsCad0.infCons.setUF(tUfCons0);
      assertNull(tConsCad0.getVersao());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad_InfCons0.getUF();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TConsCad.InfCons tConsCad_InfCons0 = new TConsCad.InfCons();
      tConsCad_InfCons0.setCNPJ("ES");
      assertNull(tConsCad_InfCons0.getXServ());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      String string0 = tConsCad0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      TConsCad.InfCons tConsCad_InfCons0 = tConsCad0.getInfCons();
      assertNull(tConsCad_InfCons0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TConsCad tConsCad0 = new TConsCad();
      tConsCad0.setVersao("");
      String string0 = tConsCad0.getVersao();
      assertEquals("", string0);
  }
}
