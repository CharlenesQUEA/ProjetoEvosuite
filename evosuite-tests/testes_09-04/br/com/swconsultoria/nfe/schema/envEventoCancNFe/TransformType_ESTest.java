/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 11:53:40 GMT 2024
 */

package br.com.swconsultoria.nfe.schema.envEventoCancNFe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema.envEventoCancNFe.TransformType;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransformType_ESTest extends TransformType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransformType transformType0 = new TransformType();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("{nx<'m!%SM");
      transformType0.xPath = (List<String>) linkedList0;
      List<String> list0 = transformType0.getXPath();
      assertTrue(list0.contains("{nx<'m!%SM"));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransformType transformType0 = new TransformType();
      transformType0.setAlgorithm("");
      String string0 = transformType0.getAlgorithm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransformType transformType0 = new TransformType();
      List<String> list0 = transformType0.getXPath();
      List<String> list1 = transformType0.getXPath();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransformType transformType0 = new TransformType();
      transformType0.setAlgorithm("c");
      String string0 = transformType0.getAlgorithm();
      assertEquals("c", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransformType transformType0 = new TransformType();
      String string0 = transformType0.getAlgorithm();
      assertNull(string0);
  }
}
