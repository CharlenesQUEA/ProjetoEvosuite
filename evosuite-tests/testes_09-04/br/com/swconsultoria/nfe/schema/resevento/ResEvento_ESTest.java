/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 11:01:21 GMT 2024
 */

package br.com.swconsultoria.nfe.schema.resevento;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema.resevento.ResEvento;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResEvento_ESTest extends ResEvento_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setXEvento("Q-JvQz@>*n 2");
      String string0 = resEvento0.getXEvento();
      assertEquals("Q-JvQz@>*n 2", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setVersao("A9");
      String string0 = resEvento0.getVersao();
      assertEquals("A9", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.tpEvento = ".e!WIfp*7TT}a";
      String string0 = resEvento0.getTpEvento();
      assertEquals(".e!WIfp*7TT}a", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setTpEvento("");
      String string0 = resEvento0.getTpEvento();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.nSeqEvento = "br.com.swconsultoria.nfe.schema.resevento.ResEvento";
      String string0 = resEvento0.getNSeqEvento();
      assertEquals("br.com.swconsultoria.nfe.schema.resevento.ResEvento", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setNProt("&U{1il@|d0");
      String string0 = resEvento0.getNProt();
      assertEquals("&U{1il@|d0", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.nProt = "";
      String string0 = resEvento0.getNProt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setDhRecbto("N");
      String string0 = resEvento0.getDhRecbto();
      assertEquals("N", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setDhRecbto("");
      String string0 = resEvento0.getDhRecbto();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.dhEvento = "MCGE0o3'swjD2}VzXm";
      String string0 = resEvento0.getDhEvento();
      assertEquals("MCGE0o3'swjD2}VzXm", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setDhEvento("");
      String string0 = resEvento0.getDhEvento();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setChNFe("y%?j;P_NTM{");
      String string0 = resEvento0.getChNFe();
      assertEquals("y%?j;P_NTM{", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.chNFe = "";
      String string0 = resEvento0.getChNFe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.cpf = "";
      String string0 = resEvento0.getCPF();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setCOrgao("");
      String string0 = resEvento0.getCOrgao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setCNPJ("br.com.swconsultoria.nfe.schema.resevento.ResEvento");
      String string0 = resEvento0.getCNPJ();
      assertEquals("br.com.swconsultoria.nfe.schema.resevento.ResEvento", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setXEvento("");
      String string0 = resEvento0.getXEvento();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getDhRecbto();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getChNFe();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getXEvento();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getTpEvento();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getNProt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setCPF("jaw??%7=3|");
      String string0 = resEvento0.getCPF();
      assertEquals("jaw??%7=3|", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setVersao("");
      String string0 = resEvento0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getCNPJ();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getCOrgao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getDhEvento();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getNSeqEvento();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setCNPJ("");
      String string0 = resEvento0.getCNPJ();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      String string0 = resEvento0.getCPF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setCOrgao("-xMZJr7");
      String string0 = resEvento0.getCOrgao();
      assertEquals("-xMZJr7", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResEvento resEvento0 = new ResEvento();
      resEvento0.setNSeqEvento("");
      String string0 = resEvento0.getNSeqEvento();
      assertEquals("", string0);
  }
}
