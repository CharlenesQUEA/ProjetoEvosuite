/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 08:08:13 GMT 2024
 */

package br.com.swconsultoria.nfe.schema.resnfe;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.swconsultoria.nfe.schema.resnfe.ResNFe;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResNFe_ESTest extends ResNFe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.xNome = "";
      String string0 = resNFe0.getXNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setVersao(".?N5>n>");
      String string0 = resNFe0.getVersao();
      assertEquals(".?N5>n>", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setVNF("");
      String string0 = resNFe0.getVNF();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setTpNF("SIQp");
      String string0 = resNFe0.getTpNF();
      assertEquals("SIQp", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.tpNF = "";
      String string0 = resNFe0.getTpNF();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.nProt = "vj";
      String string0 = resNFe0.getNProt();
      assertEquals("vj", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setNProt("");
      String string0 = resNFe0.getNProt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setIE("}SD`$!SI+of<");
      String string0 = resNFe0.getIE();
      assertEquals("}SD`$!SI+of<", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.ie = "";
      String string0 = resNFe0.getIE();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      byte[] byteArray0 = new byte[0];
      resNFe0.setDigVal(byteArray0);
      byte[] byteArray1 = resNFe0.getDigVal();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setDhRecbto("-c+HYq*?Ej?");
      String string0 = resNFe0.getDhRecbto();
      assertEquals("-c+HYq*?Ej?", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setDhEmi("3=Et");
      String string0 = resNFe0.getDhEmi();
      assertEquals("3=Et", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setDhEmi("");
      String string0 = resNFe0.getDhEmi();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setChNFe("");
      String string0 = resNFe0.getChNFe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.cSitNFe = "9/k~Gw<iv/6?qg>";
      String string0 = resNFe0.getCSitNFe();
      assertEquals("9/k~Gw<iv/6?qg>", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setCSitNFe("");
      String string0 = resNFe0.getCSitNFe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setCPF("}SD`$!SI+of<");
      String string0 = resNFe0.getCPF();
      assertEquals("}SD`$!SI+of<", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setCPF("");
      String string0 = resNFe0.getCPF();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setCNPJ("Ko_>n;, '?");
      String string0 = resNFe0.getCNPJ();
      assertEquals("Ko_>n;, '?", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.cnpj = "";
      String string0 = resNFe0.getCNPJ();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getCSitNFe();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setDhRecbto("");
      String string0 = resNFe0.getDhRecbto();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getCPF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getXNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getDhRecbto();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      byte[] byteArray0 = resNFe0.getDigVal();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getTpNF();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setChNFe("br.com.swconsultoria.nfe.schema.resnfe.ResNFe");
      String string0 = resNFe0.getChNFe();
      assertEquals("br.com.swconsultoria.nfe.schema.resnfe.ResNFe", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getDhEmi();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getVersao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getIE();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setVersao("");
      String string0 = resNFe0.getVersao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setXNome("@*\"E[m8rx.8t95");
      String string0 = resNFe0.getXNome();
      assertEquals("@*\"E[m8rx.8t95", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      byte[] byteArray0 = new byte[3];
      resNFe0.setDigVal(byteArray0);
      byte[] byteArray1 = resNFe0.getDigVal();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getCNPJ();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getChNFe();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getNProt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      resNFe0.setVNF("%kx <");
      String string0 = resNFe0.getVNF();
      assertEquals("%kx <", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResNFe resNFe0 = new ResNFe();
      String string0 = resNFe0.getVNF();
      assertNull(string0);
  }
}
